// Generated by psc version 0.6.0.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_1) {
        return $less$greater(__dict_Semigroup_1);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showString = new Show(showStringImpl);
    var showNumber = new Show(showNumberImpl);
    var show = function (dict) {
        return dict.show;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_4) {
        return pure(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
    };
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var liftA1 = function (__dict_Applicative_6) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_6)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqString = new Eq(refIneq, refEq);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var $$const = function (_91) {
        return function (_92) {
            return _91;
        };
    };
    var $$void = function (__dict_Functor_8) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_8)($$const(unit))(fa);
        };
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $greater = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _453 = compare(__dict_Ord_12)(a1)(a2);
                if (_453 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var ap = function (__dict_Monad_14) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_14)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        "$": $dollar, 
        "+": $plus, 
        "++": $plus$plus, 
        "-": $minus, 
        "/=": $div$eq, 
        ":": $colon, 
        "<$>": $less$dollar$greater, 
        "<*>": $less$times$greater, 
        "<<<": $less$less$less, 
        "<>": $less$greater, 
        "==": $eq$eq, 
        ">": $greater, 
        ">>=": $greater$greater$eq, 
        Applicative: Applicative, 
        Apply: Apply, 
        Bind: Bind, 
        BoolLike: BoolLike, 
        Category: Category, 
        EQ: EQ, 
        Eq: Eq, 
        Functor: Functor, 
        GT: GT, 
        LT: LT, 
        Monad: Monad, 
        Num: Num, 
        Ord: Ord, 
        Semigroup: Semigroup, 
        Semigroupoid: Semigroupoid, 
        Show: Show, 
        Unit: Unit, 
        ap: ap, 
        boolLikeBoolean: boolLikeBoolean, 
        categoryArr: categoryArr, 
        compare: compare, 
        cons: cons, 
        "const": $$const, 
        eqNumber: eqNumber, 
        eqString: eqString, 
        flip: flip, 
        id: id, 
        liftA1: liftA1, 
        not: not, 
        numNumber: numNumber, 
        ordNumber: ordNumber, 
        pure: pure, 
        refEq: refEq, 
        refIneq: refIneq, 
        "return": $$return, 
        semigroupString: semigroupString, 
        semigroupoidArr: semigroupoidArr, 
        show: show, 
        showNumber: showNumber, 
        showString: showString, 
        unit: unit, 
        "void": $$void, 
        "||": $bar$bar
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Kanren_Var = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Var = {
        create: function (value) {
            return value;
        }
    };
    var zero = 0;
    var runVar = function (_112) {
        return _112;
    };
    var eqVar = new Prelude.Eq(function (_116) {
        return function (_117) {
            return _116 !== _117;
        };
    }, function (_114) {
        return function (_115) {
            return _114 === _115;
        };
    });
    var ordVar = new Prelude.Ord(function () {
        return eqVar;
    }, function (_118) {
        return function (_119) {
            return Prelude.compare(Prelude.ordNumber)(_118)(_119);
        };
    });
    return {
        Var: Var, 
        eqVar: eqVar, 
        ordVar: ordVar, 
        runVar: runVar, 
        zero: zero
    };
})();
var PS = PS || {};
PS.Kanren_Obj = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Obj = {
        create: function (value) {
            return value;
        }
    };
    var eqObj = new Prelude.Eq(function (_123) {
        return function (_124) {
            return _123 !== _124;
        };
    }, function (_121) {
        return function (_122) {
            return _121 === _122;
        };
    });
    return {
        Obj: Obj, 
        eqObj: eqObj
    };
})();
var PS = PS || {};
PS.Kanren_Term = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Obj = PS.Kanren_Obj;
    function TmVar(value0) {
        this.value0 = value0;
    };
    TmVar.create = function (value0) {
        return new TmVar(value0);
    };
    function TmObj(value0) {
        this.value0 = value0;
    };
    TmObj.create = function (value0) {
        return new TmObj(value0);
    };
    function TmPair(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TmPair.create = function (value0) {
        return function (value1) {
            return new TmPair(value0, value1);
        };
    };
    var obj = function (nm) {
        return new TmObj(nm);
    };
    return {
        TmObj: TmObj, 
        TmPair: TmPair, 
        TmVar: TmVar, 
        obj: obj
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        on: on, 
        runFn4: runFn4
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var charString = function (_132) {
        return _132;
    };
    return {
        charString: charString
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Error(noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    return {
        Error: Error, 
        strMsg: strMsg
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        applicativeEff: applicativeEff, 
        applyEff: applyEff, 
        bindE: bindE, 
        bindEff: bindEff, 
        functorEff: functorEff, 
        monadEff: monadEff, 
        returnE: returnE
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Ref = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function newRef(val) {  return function () {    return { value: val };  };};
    function readRef(ref) {  return function() {    return ref.value;  };};
    function modifyRef(ref) {  return function(f) {    return function() {      ref.value = f(ref.value);      return {};    };  };};
    function writeRef(ref) {  return function(val) {    return function() {      ref.value = val;      return {};    };  };};
    return {
        modifyRef: modifyRef, 
        newRef: newRef, 
        readRef: readRef, 
        writeRef: writeRef
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Lazy1(defer1) {
        this.defer1 = defer1;
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_29) {
        return function (f) {
            return defer1(__dict_Lazy1_29)(function (_) {
                return f(fix1(__dict_Lazy1_29)(f));
            });
        };
    };
    return {
        Lazy1: Lazy1, 
        defer1: defer1, 
        fix1: fix1
    };
})();
var PS = PS || {};
PS.Control_Monad_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Identity = {
        create: function (value) {
            return value;
        }
    };
    var runIdentity = function (_149) {
        return _149;
    };
    var functorIdentity = new Prelude.Functor(function (f) {
        return function (m) {
            return Identity.create(f(runIdentity(m)));
        };
    });
    var applyIdentity = new Prelude.Apply(function (_150) {
        return function (_151) {
            return Identity.create(_150(_151));
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity.create);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        applicativeIdentity: applicativeIdentity, 
        applyIdentity: applyIdentity, 
        bindIdentity: bindIdentity, 
        functorIdentity: functorIdentity, 
        monadIdentity: monadIdentity, 
        runIdentity: runIdentity
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_41) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_41)(Prelude["<$>"](__dict_Apply_41["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_42) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_42)(Prelude["<$>"](__dict_Apply_42["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    return {
        "*>": $times$greater, 
        "<*": $less$times
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        "<|>": $less$bar$greater, 
        Alt: Alt
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    return {
        Plus: Plus
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_48) {
        return function (__dict_Lazy1_49) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_48["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_48["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_49)(function (_) {
                    return many(__dict_Alternative_48)(__dict_Lazy1_49)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_50) {
        return function (__dict_Lazy1_51) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_50["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_50)(__dict_Lazy1_51)(v))(Prelude.pure(__dict_Alternative_50["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    var functorEither = new Prelude.Functor(function (_158) {
        return function (_159) {
            if (_159 instanceof Left) {
                return new Left(_159.value0);
            };
            if (_159 instanceof Right) {
                return new Right(_158(_159.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var applyEither = new Prelude.Apply(function (_160) {
        return function (_161) {
            if (_160 instanceof Left) {
                return new Left(_160.value0);
            };
            if (_160 instanceof Right) {
                return Prelude["<$>"](functorEither)(_160.value0)(_161);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    return {
        Left: Left, 
        Right: Right, 
        applicativeEither: applicativeEither, 
        applyEither: applyEither, 
        functorEither: functorEither
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var maybe = function (_169) {
        return function (_170) {
            return function (_171) {
                if (_171 instanceof Nothing) {
                    return _169;
                };
                if (_171 instanceof Just) {
                    return _170(_171.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    return {
        Just: Just, 
        Nothing: Nothing, 
        fromMaybe: fromMaybe, 
        maybe: maybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    function length (xs) {  return xs.length;};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _483 = comp(x)(y);
                    if (_483 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_483 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_483 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_193) {
        if (_193.length === 0) {
            return true;
        };
        return false;
    };
    var init = function (_192) {
        if (_192.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_192) - 1)(_192));
    };
    var functorArray = new Prelude.Functor(map);
    return {
        "..": $dot$dot, 
        append: append, 
        functorArray: functorArray, 
        init: init, 
        length: length, 
        map: map, 
        "null": $$null, 
        range: range, 
        semigroupArray: semigroupArray, 
        sortBy: sortBy, 
        zipWith: zipWith
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    function unsafeFromForeign(value) {  return value;};
    function tagOf(value) {  return Object.prototype.toString.call(value).slice(8, -1);};
    var unsafeReadPrim = function (_210) {
        return function (_211) {
            if (tagOf(_211) === _210) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_211));
            };
            return new Data_Either.Left(new TypeMismatch(_210, tagOf(_211)));
        };
    };
    var showForeignError = new Prelude.Show(function (_213) {
        if (_213 instanceof TypeMismatch) {
            return "Type mismatch: expected " + (_213.value0 + (", found " + _213.value1));
        };
        if (_213 instanceof ErrorAtIndex) {
            return "Error at array index " + (Prelude.show(Prelude.showNumber)(_213.value0) + (": " + Prelude.show(showForeignError)(_213.value1)));
        };
        if (_213 instanceof ErrorAtProperty) {
            return "Error at property " + (Prelude.show(Prelude.showString)(_213.value0) + (": " + Prelude.show(showForeignError)(_213.value1)));
        };
        if (_213 instanceof JSONError) {
            return "JSON error: " + _213.value0;
        };
        throw new Error("Failed pattern match");
    });
    var readString = unsafeReadPrim("String");
    return {
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        TypeMismatch: TypeMismatch, 
        readString: readString, 
        showForeignError: showForeignError, 
        tagOf: tagOf, 
        unsafeFromForeign: unsafeFromForeign
    };
})();
var PS = PS || {};
PS.Control_Monad_JQuery = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function select(selector) {
    return function () {
      return jQuery(selector);
    };
  }
  ;
    
  function create(html) {
    return function () {
      return jQuery(html);
    };
  }
  ;
    
  function attr(attrs) {
    return function(ob) {
      return function () {
        return ob.attr(attrs);
      };
    };
  }
  ;
    
  function css(props) {
    return function(ob) {
      return function () {
        return ob.css(props);
      };
    };
  }
  ;
    
  function addClass(cls) {
    return function(ob) {
      return function () {
        return ob.addClass(cls);
      };
    };
  }
  ;
    
  function append(ob1) {
    return function(ob) {
      return function () {
        return ob.append(ob1);
      };
    };
  }
  ;
    
  function remove(ob) {
    return function () {
      return ob.remove();
    };
  }
  ;
    
  function appendText(s) {
    return function(ob) {
      return function () {
        return ob.append(s);
      };
    };
  }
  ;
    
  function getValue(ob) {
    return function() {
      return ob.val();
    };
  }
  ;
    
  function on(evt) {
    return function(act) {
      return function(ob) {
        return function() {
          return ob.on(evt, function(e) {
            act(e)(jQuery(this))();
          });
        };
      };
    };
  }
  ;
    
  function preventDefault(e) {
    return function() {
      e.preventDefault();
    };
  }
  ;
    return {
        addClass: addClass, 
        append: append, 
        appendText: appendText, 
        attr: attr, 
        create: create, 
        css: css, 
        getValue: getValue, 
        on: on, 
        preventDefault: preventDefault, 
        remove: remove, 
        select: select
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_228) {
        if (_228 instanceof Data_Maybe.Just) {
            return _228.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    return {
        init: init, 
        last: last
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidArray: monoidArray, 
        monoidString: monoidString
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var fst = function (_280) {
        return _280.value0;
    };
    return {
        Tuple: Tuple, 
        fst: fst, 
        zip: zip
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var semigroupFirst = new Prelude.Semigroup(function (_342) {
        return function (_343) {
            if (_342 instanceof Data_Maybe.Just) {
                return _342;
            };
            return _343;
        };
    });
    var runFirst = function (_334) {
        return _334;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    return {
        First: First, 
        monoidFirst: monoidFirst, 
        runFirst: runFirst, 
        semigroupFirst: semigroupFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    function foldrArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = xs.length - 1; i >= 0; --i) {        acc = f(xs[i])(acc);      }      return acc;    }  }};
    function foldlArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = 0, len = xs.length; i < len; ++i) {        acc = f(acc)(xs[i]);      }      return acc;    }  }};
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_311) {
        return function (__dict_Monoid_312) {
            return function (sep) {
                return function (xs) {
                    var go = function (_377) {
                        return function (_378) {
                            if (_377.init) {
                                return {
                                    init: false, 
                                    acc: _378
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_312["__superclass_Prelude.Semigroup_0"]())(_377.acc)(Prelude["<>"](__dict_Monoid_312["__superclass_Prelude.Semigroup_0"]())(sep)(_378))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_311)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_312)
                    })(xs)).acc;
                };
            };
        };
    };
    var or = function (__dict_Foldable_315) {
        return foldl(__dict_Foldable_315)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var foldableArray = new Foldable(function (__dict_Monoid_322) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_322["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_322))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_323) {
        return function (__dict_Foldable_324) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_324)(Data_Monoid_First.monoidFirst)(function (_344) {
                        return Prelude["=="](__dict_Eq_323)(a)(_344.value0) ? new Data_Maybe.Just(_344.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var any = function (__dict_Foldable_328) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_328)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_329) {
        return function (__dict_Foldable_330) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_330))(Prelude["=="](__dict_Eq_329));
        };
    };
    var notElem = function (__dict_Eq_331) {
        return function (__dict_Foldable_332) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_331)(__dict_Foldable_332)(x));
            };
        };
    };
    return {
        Foldable: Foldable, 
        any: any, 
        elem: elem, 
        foldMap: foldMap, 
        foldableArray: foldableArray, 
        foldl: foldl, 
        foldlArray: foldlArray, 
        foldr: foldr, 
        foldrArray: foldrArray, 
        intercalate: intercalate, 
        lookup: lookup, 
        notElem: notElem, 
        or: or
    };
})();
var PS = PS || {};
PS.Kanren_Goal = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Done() {

    };
    Done.value = new Done();
    function Fail() {

    };
    Fail.value = new Fail();
    function Unify(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Unify.create = function (value0) {
        return function (value1) {
            return new Unify(value0, value1);
        };
    };
    function Fresh(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Fresh.create = function (value0) {
        return function (value1) {
            return new Fresh(value0, value1);
        };
    };
    function Disj(value0) {
        this.value0 = value0;
    };
    Disj.create = function (value0) {
        return new Disj(value0);
    };
    function Conj(value0) {
        this.value0 = value0;
    };
    Conj.create = function (value0) {
        return new Conj(value0);
    };
    function Named(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Named.create = function (value0) {
        return function (value1) {
            return new Named(value0, value1);
        };
    };
    return {
        Conj: Conj, 
        Disj: Disj, 
        Done: Done, 
        Fail: Fail, 
        Fresh: Fresh, 
        Named: Named, 
        Unify: Unify
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    
    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        charAt: charAt, 
        drop: drop, 
        indexOf: indexOf, 
        joinWith: joinWith, 
        length: length
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_347) {
        return function (_392) {
            if (_392.length === 0) {
                return Prelude.pure(__dict_Applicative_347)([  ]);
            };
            if (_392.length >= 1) {
                var _514 = _392.slice(1);
                return Prelude["<*>"](__dict_Applicative_347["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_347["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_392[0]))(sequence(traversableArray)(__dict_Applicative_347)(_514));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_346) {
        return function (_390) {
            return function (_391) {
                if (_391.length === 0) {
                    return Prelude.pure(__dict_Applicative_346)([  ]);
                };
                if (_391.length >= 1) {
                    var _518 = _391.slice(1);
                    return Prelude["<*>"](__dict_Applicative_346["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_346["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_390(_391[0])))(traverse(traversableArray)(__dict_Applicative_346)(_390)(_518));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var $$for = function (__dict_Applicative_349) {
        return function (__dict_Traversable_350) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_350)(__dict_Applicative_349)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        sequence: sequence, 
        traversableArray: traversableArray, 
        traverse: traverse
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    function IsForeign(read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    return {
        IsForeign: IsForeign, 
        read: read, 
        stringIsForeign: stringIsForeign
    };
})();
var PS = PS || {};
PS.Kanren_Subst = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    var Kanren_Var = PS.Kanren_Var;
    var Data_Tuple = PS.Data_Tuple;
    var walk = function (_405) {
        return function (_406) {
            if (_406 instanceof Kanren_Term.TmVar) {
                return Data_Maybe.fromMaybe(new Kanren_Term.TmVar(_406.value0))(Data_Foldable.lookup(Kanren_Var.eqVar)(Data_Foldable.foldableArray)(_406.value0)(_405));
            };
            if (_406 instanceof Kanren_Term.TmPair) {
                return new Kanren_Term.TmPair(walk(_405)(_406.value0), walk(_405)(_406.value1));
            };
            return _406;
        };
    };
    var ext = function (v) {
        return function (t) {
            return function (s) {
                return Prelude[":"](new Data_Tuple.Tuple(v, t))(s);
            };
        };
    };
    return {
        ext: ext, 
        walk: walk
    };
})();
var PS = PS || {};
PS.Kanren_State = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function State(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    State.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new State(value0, value1, value2, value3);
                };
            };
        };
    };
    return {
        State: State
    };
})();
var PS = PS || {};
PS.Kanren_Unify = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Var = PS.Kanren_Var;
    var Data_Maybe = PS.Data_Maybe;
    var Kanren_Subst = PS.Kanren_Subst;
    var Kanren_Obj = PS.Kanren_Obj;
    var unify = function (u) {
        return function (v) {
            return function (s) {
                var go = function (_412) {
                    return function (_413) {
                        if (_412 instanceof Kanren_Term.TmVar && (_413 instanceof Kanren_Term.TmVar && Prelude["=="](Kanren_Var.eqVar)(_412.value0)(_413.value0))) {
                            return new Data_Maybe.Just(s);
                        };
                        if (_412 instanceof Kanren_Term.TmVar) {
                            return Data_Maybe.Just.create(Kanren_Subst.ext(_412.value0)(_413)(s));
                        };
                        if (_413 instanceof Kanren_Term.TmVar) {
                            return Data_Maybe.Just.create(Kanren_Subst.ext(_413.value0)(_412)(s));
                        };
                        if (_412 instanceof Kanren_Term.TmObj && (_413 instanceof Kanren_Term.TmObj && Prelude["=="](Kanren_Obj.eqObj)(_412.value0)(_413.value0))) {
                            return new Data_Maybe.Just(s);
                        };
                        if (_412 instanceof Kanren_Term.TmPair && _413 instanceof Kanren_Term.TmPair) {
                            var _532 = unify(_412.value0)(_413.value0)(s);
                            if (_532 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.Nothing.value;
                            };
                            if (_532 instanceof Data_Maybe.Just) {
                                return unify(_412.value1)(_413.value1)(_532.value0);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Data_Maybe.Nothing.value;
                    };
                };
                return go(Kanren_Subst.walk(s)(u))(Kanren_Subst.walk(s)(v));
            };
        };
    };
    return {
        unify: unify
    };
})();
var PS = PS || {};
PS.Kanren_Eval = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Obj = PS.Kanren_Obj;
    var Kanren_Goal = PS.Kanren_Goal;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var replace = function (nm) {
        return function (r) {
            var onTerms = function (_418) {
                if (_418 instanceof Kanren_Term.TmObj && nm === _418.value0) {
                    return r;
                };
                if (_418 instanceof Kanren_Term.TmPair) {
                    return new Kanren_Term.TmPair(onTerms(_418.value0), onTerms(_418.value1));
                };
                return _418;
            };
            var onGoals = function (_417) {
                if (_417 instanceof Kanren_Goal.Done) {
                    return Kanren_Goal.Done.value;
                };
                if (_417 instanceof Kanren_Goal.Unify) {
                    return new Kanren_Goal.Unify(onTerms(_417.value0), onTerms(_417.value1));
                };
                if (_417 instanceof Kanren_Goal.Fresh) {
                    return Data_Foldable.elem(Prelude.eqString)(Data_Foldable.foldableArray)(nm)(_417.value0) ? _417 : new Kanren_Goal.Fresh(_417.value0, onGoals(_417.value1));
                };
                if (_417 instanceof Kanren_Goal.Disj) {
                    return new Kanren_Goal.Disj(Prelude["<$>"](Data_Array.functorArray)(onGoals)(_417.value0));
                };
                if (_417 instanceof Kanren_Goal.Conj) {
                    return new Kanren_Goal.Conj(Prelude["<$>"](Data_Array.functorArray)(onGoals)(_417.value0));
                };
                if (_417 instanceof Kanren_Goal.Named) {
                    return new Kanren_Goal.Named(_417.value0, Prelude["<$>"](Data_Array.functorArray)(onTerms)(_417.value1));
                };
                throw new Error("Failed pattern match");
            };
            return onGoals;
        };
    };
    var replaceAll = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (f) {
        return function (_414) {
            return function (g) {
                return replace(_414.value0)(_414.value1)(f(g));
            };
        };
    })(Prelude.id(Prelude.categoryArr));
    var builtIn = function (_415) {
        return function (_416) {
            if (_415 === "appendo" && _416.length === 3) {
                return new Kanren_Goal.Disj([ new Kanren_Goal.Conj([ new Kanren_Goal.Unify(_416[0], Kanren_Term.obj("nil")), new Kanren_Goal.Unify(_416[1], _416[2]) ]), Kanren_Goal.Fresh.create([ "x", "xs'", "res" ])(new Kanren_Goal.Conj([ new Kanren_Goal.Unify(_416[0], new Kanren_Term.TmPair(Kanren_Term.obj("x"), Kanren_Term.obj("xs'"))), new Kanren_Goal.Named("appendo", [ Kanren_Term.obj("xs'"), _416[1], Kanren_Term.obj("res") ]), new Kanren_Goal.Unify(_416[2], new Kanren_Term.TmPair(Kanren_Term.obj("x"), Kanren_Term.obj("res"))) ])) ]);
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        builtIn: builtIn, 
        replace: replace, 
        replaceAll: replaceAll
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    function ParseError(value0) {
        this.value0 = value0;
    };
    ParseError.create = function (value0) {
        return new ParseError(value0);
    };
    var ParserT = {
        create: function (value) {
            return value;
        }
    };
    var unParserT = function (_419) {
        return _419;
    };
    var runParserT = function (__dict_Monad_359) {
        return function (s) {
            return function (p) {
                return Prelude[">>="](__dict_Monad_359["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (_25) {
                    return Prelude["return"](__dict_Monad_359)(_25.result);
                });
            };
        };
    };
    var runParser = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Identity.runIdentity)(runParserT(Control_Monad_Identity.monadIdentity)(s));
    };
    var lazy1ParserT = new Control_Lazy.Lazy1(function (f) {
        return ParserT.create(function (s) {
            return unParserT(f(Prelude.unit))(s);
        });
    });
    var functorParserT = function (__dict_Functor_364) {
        return new Prelude.Functor(function (f) {
            return function (p) {
                var f$prime = function (o) {
                    return {
                        input: o.input, 
                        result: Prelude["<$>"](Data_Either.functorEither)(f)(o.result), 
                        consumed: o.consumed
                    };
                };
                return ParserT.create(function (s) {
                    return Prelude["<$>"](__dict_Functor_364)(f$prime)(unParserT(p)(s));
                });
            };
        });
    };
    var fail = function (__dict_Monad_365) {
        return function (message) {
            return ParserT.create(function (s) {
                return Prelude["return"](__dict_Monad_365)({
                    input: s, 
                    consumed: false, 
                    result: new Data_Either.Left(new ParseError({
                        message: message
                    }))
                });
            });
        };
    };
    var errorParseError = new Control_Monad_Error.Error(new ParseError({
        message: ""
    }), function (msg) {
        return new ParseError({
            message: msg
        });
    });
    var monadParserT = function (__dict_Monad_363) {
        return new Prelude.Monad(function () {
            return applicativeParserT(__dict_Monad_363);
        }, function () {
            return bindParserT(__dict_Monad_363);
        });
    };
    var bindParserT = function (__dict_Monad_368) {
        return new Prelude.Bind(function (p) {
            return function (f) {
                var updateConsumedFlag = function (c) {
                    return function (o) {
                        return {
                            input: o.input, 
                            consumed: c || o.consumed, 
                            result: o.result
                        };
                    };
                };
                return ParserT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_368["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_368)({
                                input: o.input, 
                                result: new Data_Either.Left(o.result.value0), 
                                consumed: o.consumed
                            });
                        };
                        if (o.result instanceof Data_Either.Right) {
                            return Prelude["<$>"](((__dict_Monad_368["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(updateConsumedFlag(o.consumed))(unParserT(f(o.result.value0))(o.input));
                        };
                        throw new Error("Failed pattern match");
                    });
                });
            };
        }, function () {
            return applyParserT(__dict_Monad_368);
        });
    };
    var applyParserT = function (__dict_Monad_369) {
        return new Prelude.Apply(Prelude.ap(monadParserT(__dict_Monad_369)), function () {
            return functorParserT(((__dict_Monad_369["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var applicativeParserT = function (__dict_Monad_370) {
        return new Prelude.Applicative(function () {
            return applyParserT(__dict_Monad_370);
        }, function (a) {
            return ParserT.create(function (s) {
                return Prelude.pure(__dict_Monad_370["__superclass_Prelude.Applicative_0"]())({
                    input: s, 
                    result: new Data_Either.Right(a), 
                    consumed: false
                });
            });
        });
    };
    var altParserT = function (__dict_Monad_372) {
        return new Control_Alt.Alt(function (p1) {
            return function (p2) {
                return ParserT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_372["__superclass_Prelude.Bind_1"]())(unParserT(p1)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left && !o.consumed) {
                            return unParserT(p2)(s);
                        };
                        return Prelude["return"](__dict_Monad_372)(o);
                    });
                });
            };
        }, function () {
            return functorParserT(((__dict_Monad_372["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusParserT = function (__dict_Monad_366) {
        return new Control_Plus.Plus(function () {
            return altParserT(__dict_Monad_366);
        }, fail(__dict_Monad_366)("No alternative"));
    };
    var alternativeParserT = function (__dict_Monad_371) {
        return new Control_Alternative.Alternative(function () {
            return plusParserT(__dict_Monad_371);
        }, function () {
            return applicativeParserT(__dict_Monad_371);
        });
    };
    return {
        ParseError: ParseError, 
        ParserT: ParserT, 
        altParserT: altParserT, 
        alternativeParserT: alternativeParserT, 
        applicativeParserT: applicativeParserT, 
        applyParserT: applyParserT, 
        bindParserT: bindParserT, 
        errorParseError: errorParseError, 
        fail: fail, 
        functorParserT: functorParserT, 
        lazy1ParserT: lazy1ParserT, 
        monadParserT: monadParserT, 
        plusParserT: plusParserT, 
        runParser: runParser, 
        runParserT: runParserT, 
        unParserT: unParserT
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Combinators = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var $$try = function (__dict_Functor_374) {
        return function (p) {
            var try$prime = function (_423) {
                return function (_424) {
                    if (_424.result instanceof Data_Either.Left) {
                        return {
                            input: _423, 
                            result: _424.result, 
                            consumed: false
                        };
                    };
                    return _424;
                };
            };
            return Text_Parsing_Parser.ParserT.create(function (s) {
                return Prelude["<$>"](__dict_Functor_374)(try$prime(s))(Text_Parsing_Parser.unParserT(p)(s));
            });
        };
    };
    return {
        "try": $$try
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Data_String = PS.Data_String;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Alt = PS.Control_Alt;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Char = PS.Data_Char;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var string = function (__dict_Monad_405) {
        return function (s) {
            return Text_Parsing_Parser.ParserT.create(function (s$prime) {
                return Prelude["return"](__dict_Monad_405)((function () {
                    var _570 = Data_String.indexOf(s)(s$prime);
                    if (_570 === 0) {
                        return {
                            consumed: true, 
                            input: Data_String.drop(Data_String.length(s))(s$prime), 
                            result: new Data_Either.Right(s)
                        };
                    };
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected " + Prelude.show(Prelude.showString)(s)))
                    };
                })());
            });
        };
    };
    var whiteSpace = function (__dict_Monad_406) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_406))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_406))(Text_Parsing_Parser.lazy1ParserT)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_406))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_406))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_406))(string(__dict_Monad_406)("\n"))(string(__dict_Monad_406)("\r")))(string(__dict_Monad_406)(" ")))(string(__dict_Monad_406)("\t"))))(function (_58) {
            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_406))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Prelude.id(Prelude.categoryArr))(_58));
        });
    };
    var $$char = function (__dict_Monad_409) {
        return Text_Parsing_Parser.ParserT.create(function (s$prime) {
            return Prelude["return"](__dict_Monad_409)((function () {
                var _572 = Data_String.charAt(0)(s$prime);
                if (_572 instanceof Data_Maybe.Nothing) {
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Unexpected EOF"))
                    };
                };
                if (_572 instanceof Data_Maybe.Just) {
                    return {
                        consumed: true, 
                        input: Data_String.drop(1)(s$prime), 
                        result: new Data_Either.Right(Data_Char.charString(_572.value0))
                    };
                };
                throw new Error("Failed pattern match");
            })());
        });
    };
    var satisfy = function (__dict_Monad_410) {
        return function (f) {
            return Text_Parsing_Parser_Combinators["try"](((__dict_Monad_410["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_410))($$char(__dict_Monad_410))(function (_57) {
                return f(_57) ? Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_410))(_57) : Text_Parsing_Parser.fail(__dict_Monad_410)("Character did not satisfy predicate");
            }));
        };
    };
    var noneOf = function (__dict_Monad_411) {
        return function (ss) {
            return satisfy(__dict_Monad_411)(Prelude.flip(Data_Foldable.notElem(Prelude.eqString)(Data_Foldable.foldableArray))(ss));
        };
    };
    return {
        "char": $$char, 
        noneOf: noneOf, 
        satisfy: satisfy, 
        string: string, 
        whiteSpace: whiteSpace
    };
})();
var PS = PS || {};
PS.Kanren_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_String = PS.Data_String;
    var Control_Alternative = PS.Control_Alternative;
    var Text_Parsing_Parser_String = PS.Text_Parsing_Parser_String;
    var Control_Apply = PS.Control_Apply;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var Data_Either = PS.Data_Either;
    var Kanren_Term = PS.Kanren_Term;
    var Data_Array = PS.Data_Array;
    var Kanren_Goal = PS.Kanren_Goal;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array_Unsafe = PS.Data_Array_Unsafe;
    function Atom(value0) {
        this.value0 = value0;
    };
    Atom.create = function (value0) {
        return new Atom(value0);
    };
    function Sexpr(value0) {
        this.value0 = value0;
    };
    Sexpr.create = function (value0) {
        return new Sexpr(value0);
    };
    var parseAtom = Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Identity.functorIdentity))(Prelude["<<<"](Prelude.semigroupoidArr)(Atom.create)(Data_String.joinWith("")))(Control_Alternative.some(Text_Parsing_Parser.alternativeParserT(Control_Monad_Identity.monadIdentity))(Text_Parsing_Parser.lazy1ParserT)(Text_Parsing_Parser_String.noneOf(Control_Monad_Identity.monadIdentity)([ " ", ")", "(", "\n", "\t", "\r" ])));
    var parens = function (p) {
        return Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Identity.monadIdentity))(Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Identity.monadIdentity))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Identity.monadIdentity))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Identity.monadIdentity))(Text_Parsing_Parser_String.string(Control_Monad_Identity.monadIdentity)("("))(Text_Parsing_Parser_String.whiteSpace(Control_Monad_Identity.monadIdentity)))(p))(Text_Parsing_Parser_String.whiteSpace(Control_Monad_Identity.monadIdentity)))(Text_Parsing_Parser_String.string(Control_Monad_Identity.monadIdentity)(")"));
    };
    var parseSexpr = Control_Lazy.fix1(Text_Parsing_Parser.lazy1ParserT)(function (p) {
        return Control_Apply["<*"](Text_Parsing_Parser.applyParserT(Control_Monad_Identity.monadIdentity))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(Control_Monad_Identity.monadIdentity))(Text_Parsing_Parser_String.whiteSpace(Control_Monad_Identity.monadIdentity))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(Control_Monad_Identity.monadIdentity))(Text_Parsing_Parser_Combinators["try"](Control_Monad_Identity.functorIdentity)(parseAtom))(parens(Prelude["<$>"](Text_Parsing_Parser.functorParserT(Control_Monad_Identity.functorIdentity))(Sexpr.create)(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(Control_Monad_Identity.monadIdentity))(Text_Parsing_Parser.lazy1ParserT)(p))))))(Text_Parsing_Parser_String.whiteSpace(Control_Monad_Identity.monadIdentity));
    });
    var parseGoal = function (s) {
        var sexprToTerm = function (_429) {
            if (_429 instanceof Atom) {
                return Data_Either.Right.create(Kanren_Term.obj(_429.value0));
            };
            if (_429 instanceof Sexpr && _429.value0.length === 2) {
                return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Kanren_Term.TmPair.create)(sexprToTerm(_429.value0[0])))(sexprToTerm(_429.value0[1]));
            };
            return new Data_Either.Left("Invalid term");
        };
        var fromAtom = function (_430) {
            if (_430 instanceof Atom) {
                return new Data_Either.Right(_430.value0);
            };
            return new Data_Either.Left("Expected atom");
        };
        var sexprToGoal = function (_428) {
            if (_428 instanceof Sexpr && _428.value0.length >= 1) {
                var _586 = _428.value0.slice(1);
                if (_428.value0[0] instanceof Atom && ((_428.value0[0]).value0 === "fresh" && Data_Array.length(_586) > 1)) {
                    return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Kanren_Goal.Fresh.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(fromAtom)(Data_Array_Unsafe.init(_586))))(sexprToGoal(Data_Array_Unsafe.last(_586)));
                };
            };
            if (_428 instanceof Sexpr && _428.value0.length >= 1) {
                var _590 = _428.value0.slice(1);
                if (_428.value0[0] instanceof Atom && (_428.value0[0]).value0 === "fresh") {
                    return new Data_Either.Left("fresh expects two or more arguments");
                };
            };
            if (_428 instanceof Sexpr && (_428.value0.length === 3 && (_428.value0[0] instanceof Atom && (_428.value0[0]).value0 === "="))) {
                return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(Kanren_Goal.Unify.create)(sexprToTerm(_428.value0[1])))(sexprToTerm(_428.value0[2]));
            };
            if (_428 instanceof Sexpr && _428.value0.length >= 1) {
                var _599 = _428.value0.slice(1);
                if (_428.value0[0] instanceof Atom && (_428.value0[0]).value0 === "=") {
                    return new Data_Either.Left("= expects two arguments");
                };
            };
            if (_428 instanceof Sexpr && _428.value0.length >= 1) {
                var _603 = _428.value0.slice(1);
                if (_428.value0[0] instanceof Atom && ((_428.value0[0]).value0 === "disj" && Data_Array.length(_603) > 1)) {
                    return Prelude["<$>"](Data_Either.functorEither)(Kanren_Goal.Disj.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(sexprToGoal)(_603));
                };
            };
            if (_428 instanceof Sexpr && _428.value0.length >= 1) {
                var _607 = _428.value0.slice(1);
                if (_428.value0[0] instanceof Atom && (_428.value0[0]).value0 === "disj") {
                    return new Data_Either.Left("disj expects two arguments");
                };
            };
            if (_428 instanceof Sexpr && _428.value0.length >= 1) {
                var _611 = _428.value0.slice(1);
                if (_428.value0[0] instanceof Atom && ((_428.value0[0]).value0 === "conj" && Data_Array.length(_611) > 1)) {
                    return Prelude["<$>"](Data_Either.functorEither)(Kanren_Goal.Conj.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(sexprToGoal)(_611));
                };
            };
            if (_428 instanceof Sexpr && _428.value0.length >= 1) {
                var _615 = _428.value0.slice(1);
                if (_428.value0[0] instanceof Atom && (_428.value0[0]).value0 === "conj") {
                    return new Data_Either.Left("conj expects two arguments");
                };
            };
            if (_428 instanceof Sexpr && _428.value0.length >= 1) {
                var _619 = _428.value0.slice(1);
                if (_428.value0[0] instanceof Atom && Data_Array.length(_619) > 1) {
                    return Prelude["<$>"](Data_Either.functorEither)(Kanren_Goal.Named.create((_428.value0[0]).value0))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(sexprToTerm)(_619));
                };
            };
            return new Data_Either.Left("Cannot parse goal");
        };
        var _620 = Text_Parsing_Parser.runParser(s)(parseSexpr);
        if (_620 instanceof Data_Either.Left) {
            return new Data_Either.Left(_620.value0.value0.message);
        };
        if (_620 instanceof Data_Either.Right) {
            return sexprToGoal(_620.value0);
        };
        throw new Error("Failed pattern match");
    };
    return {
        Atom: Atom, 
        Sexpr: Sexpr, 
        parens: parens, 
        parseAtom: parseAtom, 
        parseGoal: parseGoal, 
        parseSexpr: parseSexpr
    };
})();
var PS = PS || {};
PS.Kanren_Render = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_JQuery = PS.Control_Monad_JQuery;
    var Control_Monad_Eff_Ref = PS.Control_Monad_Eff_Ref;
    var Kanren_State = PS.Kanren_State;
    var Kanren_Goal = PS.Kanren_Goal;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Var = PS.Kanren_Var;
    var Kanren_Obj = PS.Kanren_Obj;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Apply = PS.Control_Apply;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Kanren_Eval = PS.Kanren_Eval;
    var Kanren_Unify = PS.Kanren_Unify;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Function = PS.Data_Function;
    var Kanren_Subst = PS.Kanren_Subst;
    var Data_Foreign_Class = PS.Data_Foreign_Class;
    var Data_Either = PS.Data_Either;
    var Data_Foreign = PS.Data_Foreign;
    var Kanren_Parser = PS.Kanren_Parser;
    var showError = function (err) {
        return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
            var _60 = Control_Monad_JQuery.create("<button type='button' class='close' data-dismiss='alert'>&times;</button>")();
            var _59 = Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("alert alert-danger alert-dismissible")))(Control_Monad_JQuery.attr({
                role: "alert"
            })))(Control_Monad_JQuery.append(_60)))(Control_Monad_JQuery.appendText(err))();
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#error"))(Control_Monad_JQuery.append(_59))();
        });
    };
    var showEditor = Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#editor"))(Control_Monad_JQuery.css({
            display: "block"
        }))();
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#goal"))(Control_Monad_JQuery.css({
            display: "none"
        }))();
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#editButton"))(Control_Monad_JQuery.css({
            display: "none"
        }))();
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#undoButton"))(Control_Monad_JQuery.css({
            display: "none"
        }))();
    });
    var hideEditor = Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#editor"))(Control_Monad_JQuery.css({
            display: "none"
        }))();
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#goal"))(Control_Monad_JQuery.css({
            display: "block"
        }))();
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#editButton"))(Control_Monad_JQuery.css({
            display: "block"
        }))();
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#undoButton"))(Control_Monad_JQuery.css({
            display: "block"
        }))();
    });
    var renderSavingState = function (oldState) {
        return function (history) {
            return function (newState) {
                return function __do() {
                    Control_Monad_Eff_Ref.modifyRef(history)(Prelude[":"](oldState))();
                    return render(history)(newState)();
                };
            };
        };
    };
    var render = function (_433) {
        return function (_434) {
            var unwind = function (_439) {
                if (_439.value0 instanceof Kanren_Goal.Done && _439.value3.length >= 1) {
                    var _634 = _439.value3.slice(1);
                    return new Kanren_State.State(_439.value3[0], _439.value1, _439.value2, _634);
                };
                return _439;
            };
            var spaces = (function () {
                var go = function (__copy__443) {
                    return function (__copy__444) {
                        var _443 = __copy__443;
                        var _444 = __copy__444;
                        tco: while (true) {
                            if (_444 === 0) {
                                return _443;
                            };
                            var __tco__443 = _443 + "  ";
                            var __tco__444 = _444 - 1;
                            _443 = __tco__443;
                            _444 = __tco__444;
                            continue tco;
                        };
                    };
                };
                return go("");
            })();
            var renderTerm = function (_442) {
                if (_442 instanceof Kanren_Term.TmVar) {
                    return "#" + Prelude.show(Prelude.showNumber)(_442.value0);
                };
                if (_442 instanceof Kanren_Term.TmObj) {
                    return _442.value0;
                };
                if (_442 instanceof Kanren_Term.TmPair) {
                    return "(" + (renderTerm(_442.value0) + (" " + (renderTerm(_442.value1) + ")")));
                };
                throw new Error("Failed pattern match");
            };
            var renderShortGoal = function (_435) {
                if (_435 instanceof Kanren_Goal.Done) {
                    return "Done";
                };
                if (_435 instanceof Kanren_Goal.Fresh) {
                    return "fresh " + Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(_435.value0);
                };
                if (_435 instanceof Kanren_Goal.Unify) {
                    return renderTerm(_435.value0) + (" == " + renderTerm(_435.value1));
                };
                if (_435 instanceof Kanren_Goal.Disj) {
                    return "disj";
                };
                if (_435 instanceof Kanren_Goal.Conj) {
                    return "conj";
                };
                if (_435 instanceof Kanren_Goal.Named) {
                    return _435.value0;
                };
                throw new Error("Failed pattern match");
            };
            var newLine = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("line"));
            var linkTo = function (_440) {
                return function (_441) {
                    if (_440) {
                        return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<a href='#'>"))(Control_Monad_JQuery.on("click")(function (e) {
                            return function (_) {
                                return Control_Apply["*>"](Control_Monad_Eff.applyEff)(_441)(Control_Monad_JQuery.preventDefault(e));
                            };
                        }));
                    };
                    if (!_440) {
                        return Control_Monad_JQuery.create("<span>");
                    };
                    throw new Error("Failed pattern match");
                };
            };
            var indented = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("indented"));
            var inContext = (function () {
                var go = function (__copy__445) {
                    return function (__copy__446) {
                        return function (__copy__447) {
                            var _445 = __copy__445;
                            var _446 = __copy__446;
                            var _447 = __copy__447;
                            tco: while (true) {
                                if (_447.length === 0) {
                                    return _445;
                                };
                                if (_447.length >= 1) {
                                    var _657 = _447.slice(1);
                                    var __tco__445 = Prelude[":"](new Data_Tuple.Tuple(_447[0], Prelude["++"](Data_Array.semigroupArray)(_446)(_657)))(_445);
                                    var __tco__446 = Prelude["++"](Data_Array.semigroupArray)(_446)([ _447[0] ]);
                                    _445 = __tco__445;
                                    _446 = __tco__446;
                                    _447 = _657;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
                return go([  ])([  ]);
            })();
            var renderGoal = function (_436) {
                return function (_437) {
                    return function (_438) {
                        if (_438 instanceof Kanren_Goal.Done) {
                            return Prelude["void"](Control_Monad_Eff.functorEff)(Control_Monad_JQuery.appendText("Evaluation complete")(_437));
                        };
                        if (_438 instanceof Kanren_Goal.Fail) {
                            return Prelude["void"](Control_Monad_Eff.functorEff)(Control_Monad_JQuery.appendText("Contradiction!")(_437));
                        };
                        if (_438 instanceof Kanren_Goal.Fresh) {
                            return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                                var nextVar = Kanren_Var.runVar(_434.value2) + Data_Array.length(_438.value0);
                                var freshNames = Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(Kanren_Term.TmVar.create)(Kanren_Var.Var.create))(Data_Array[".."](Kanren_Var.runVar(_434.value2))(Kanren_Var.runVar(_434.value2) + Data_Array.length(_438.value0) - 1));
                                var newState = new Kanren_State.State(Kanren_Eval.replaceAll(Data_Tuple.zip(_438.value0)(freshNames))(_438.value1), _434.value1, nextVar, _434.value3);
                                return function __do() {
                                    var _65 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_436)(renderSavingState(_434)(_433)(newState)))(Control_Monad_JQuery.appendText("(fresh " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(_438.value0) + "")))();
                                    var _64 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_65))();
                                    Control_Monad_JQuery.append(_64)(_437)();
                                    var _63 = indented();
                                    renderGoal(false)(_63)(_438.value1)();
                                    Control_Monad_JQuery.append(_63)(_437)();
                                    var _62 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText(")"))();
                                    return Control_Monad_JQuery.append(_62)(_437)();
                                };
                            })());
                        };
                        if (_438 instanceof Kanren_Goal.Unify) {
                            return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                                var text = "(= " + (renderTerm(_438.value0) + (" " + (renderTerm(_438.value1) + ")")));
                                var action = (function () {
                                    var _667 = Kanren_Unify.unify(_438.value0)(_438.value1)(_434.value1);
                                    if (_667 instanceof Data_Maybe.Nothing) {
                                        return renderSavingState(_434)(_433)(new Kanren_State.State(Kanren_Goal.Fail.value, _434.value1, _434.value2, _434.value3));
                                    };
                                    if (_667 instanceof Data_Maybe.Just) {
                                        return renderSavingState(_434)(_433)(unwind(new Kanren_State.State(Kanren_Goal.Done.value, _667.value0, _434.value2, _434.value3)));
                                    };
                                    throw new Error("Failed pattern match");
                                })();
                                return function __do() {
                                    var _67 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_436)(action))(Control_Monad_JQuery.appendText(text))();
                                    var _66 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_67))();
                                    return Control_Monad_JQuery.append(_66)(_437)();
                                };
                            })());
                        };
                        if (_438 instanceof Kanren_Goal.Named) {
                            return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                                var text = "(" + (_438.value0 + (" " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Prelude["<$>"](Data_Array.functorArray)(renderTerm)(_438.value1)) + ")")));
                                var newState = new Kanren_State.State(Kanren_Eval.builtIn(_438.value0)(_438.value1), _434.value1, _434.value2, _434.value3);
                                return function __do() {
                                    var _69 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_436)(renderSavingState(_434)(_433)(newState)))(Control_Monad_JQuery.appendText(text))();
                                    var _68 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_69))();
                                    return Control_Monad_JQuery.append(_68)(_437)();
                                };
                            })());
                        };
                        if (_438 instanceof Kanren_Goal.Disj) {
                            return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                                var _73 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText("(disj"))();
                                Control_Monad_JQuery.append(_73)(_437)();
                                Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(_438.value0)(function (g_2) {
                                    return function __do() {
                                        var _71 = indented();
                                        var _70 = linkTo(_436)(renderSavingState(_434)(_433)(unwind(new Kanren_State.State(g_2, _434.value1, _434.value2, _434.value3))))();
                                        renderGoal(false)(_70)(g_2)();
                                        Control_Monad_JQuery.append(_70)(_71)();
                                        return Control_Monad_JQuery.append(_71)(_437)();
                                    };
                                })();
                                var _72 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText(")"))();
                                return Control_Monad_JQuery.append(_72)(_437)();
                            });
                        };
                        if (_438 instanceof Kanren_Goal.Conj) {
                            return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                                var _77 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText("(conj"))();
                                Control_Monad_JQuery.append(_77)(_437)();
                                Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(inContext(_438.value0))(function (_431) {
                                    return function __do() {
                                        var _75 = indented();
                                        var _74 = linkTo(_436)(renderSavingState(_434)(_433)(unwind(new Kanren_State.State(_431.value0, _434.value1, _434.value2, Prelude["++"](Data_Array.semigroupArray)(_431.value1)(_434.value3)))))();
                                        renderGoal(false)(_74)(_431.value0)();
                                        Control_Monad_JQuery.append(_74)(_75)();
                                        return Control_Monad_JQuery.append(_75)(_437)();
                                    };
                                })();
                                var _76 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText(")"))();
                                return Control_Monad_JQuery.append(_76)(_437)();
                            });
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
            return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                hideEditor();
                var _88 = Control_Monad_Eff_Ref.readRef(_433)();
                Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#undoButton"))(Control_Monad_JQuery.css({
                    display: Data_Array["null"](_88) ? "none" : "block"
                }))();
                Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#goal .lines"))(Control_Monad_JQuery.remove)();
                var _87 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("lines"))();
                renderGoal(true)(_87)(_434.value0)();
                Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#goal"))(Control_Monad_JQuery.append(_87))();
                Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#stack tbody tr"))(Control_Monad_JQuery.remove)();
                var _86 = Control_Monad_JQuery.select("#stack tbody")();
                Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(_434.value3)(function (g$prime) {
                    return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                        var _80 = Control_Monad_JQuery.create("<tr>")();
                        var _79 = Control_Monad_JQuery.create("<td>")();
                        var _78 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<pre>"))(Control_Monad_JQuery.appendText(renderShortGoal(g$prime)))();
                        Control_Monad_JQuery.append(_78)(_79)();
                        Control_Monad_JQuery.append(_79)(_80)();
                        return Control_Monad_JQuery.append(_80)(_86)();
                    });
                })();
                Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#subst tbody tr"))(Control_Monad_JQuery.remove)();
                var _85 = Control_Monad_JQuery.select("#subst tbody")();
                return Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(Data_Array.sortBy(Data_Function.on(Prelude.compare(Kanren_Var.ordVar))(Data_Tuple.fst))(_434.value1))(function (_432) {
                    return function __do() {
                        var _84 = Control_Monad_JQuery.create("<tr>")();
                        var _83 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<td>"))(Control_Monad_JQuery.appendText("#" + Prelude.show(Prelude.showNumber)(_432.value0)))();
                        var _82 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<pre>"))(Control_Monad_JQuery.appendText(renderTerm(Kanren_Subst.walk(_434.value1)(_432.value1))))();
                        var _81 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<td>"))(Control_Monad_JQuery.append(_82))();
                        Control_Monad_JQuery.append(_83)(_84)();
                        Control_Monad_JQuery.append(_81)(_84)();
                        return Control_Monad_JQuery.append(_84)(_85)();
                    };
                })();
            });
        };
    };
    var $$eval = function (history) {
        return function __do() {
            var _61 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#editor textarea"))(Control_Monad_JQuery.getValue)();
            return (function () {
                var _709 = Data_Foreign_Class.read(Data_Foreign_Class.stringIsForeign)(_61);
                if (_709 instanceof Data_Either.Left) {
                    return showError(Prelude.show(Data_Foreign.showForeignError)(_709.value0));
                };
                if (_709 instanceof Data_Either.Right) {
                    var _711 = Kanren_Parser.parseGoal(_709.value0);
                    if (_711 instanceof Data_Either.Left) {
                        return showError(_711.value0);
                    };
                    if (_711 instanceof Data_Either.Right) {
                        return function __do() {
                            Control_Monad_Eff_Ref.writeRef(history)([  ])();
                            return render(history)(new Kanren_State.State(_711.value0, [  ], Kanren_Var.zero, [  ]))();
                        };
                    };
                    throw new Error("Failed pattern match");
                };
                throw new Error("Failed pattern match");
            })()();
        };
    };
    return {
        "eval": $$eval, 
        hideEditor: hideEditor, 
        render: render, 
        renderSavingState: renderSavingState, 
        showEditor: showEditor, 
        showError: showError
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_JQuery = PS.Control_Monad_JQuery;
    var Control_Monad_Eff_Ref = PS.Control_Monad_Eff_Ref;
    var Kanren_Render = PS.Kanren_Render;
    var withoutDefault = function (_448) {
        return function (_449) {
            return function (_450) {
                return function __do() {
                    _448();
                    return Control_Monad_JQuery.preventDefault(_449)();
                };
            };
        };
    };
    var main = function __do() {
        var _90 = Control_Monad_Eff_Ref.newRef([  ])();
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#editButton"))(Control_Monad_JQuery.on("click")(withoutDefault(Kanren_Render.showEditor)))();
        Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#evalButton"))(Control_Monad_JQuery.on("click")(withoutDefault(Kanren_Render["eval"](_90))))();
        return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#undoButton"))(Control_Monad_JQuery.on("click")(withoutDefault(function __do() {
            var _89 = Control_Monad_Eff_Ref.readRef(_90)();
            return (function () {
                if (_89.length === 0) {
                    return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
                };
                if (_89.length >= 1) {
                    var _722 = _89.slice(1);
                    return function __do() {
                        Control_Monad_Eff_Ref.writeRef(_90)(_722)();
                        return Kanren_Render.render(_90)(_89[0])();
                    };
                };
                throw new Error("Failed pattern match");
            })()();
        })))();
    };
    return {
        main: main, 
        withoutDefault: withoutDefault
    };
})();
