// Generated by psc version 0.6.0.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showNumberImpl(n) {  return n.toString();};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_1) {
        return $less$greater(__dict_Semigroup_1);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var showNumber = new Show(showNumberImpl);
    var show = function (dict) {
        return dict.show;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_4) {
        return pure(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
    };
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var liftA1 = function (__dict_Applicative_6) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_6)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var eqString = new Eq(refIneq, refEq);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var $$const = function (_82) {
        return function (_83) {
            return _82;
        };
    };
    var $$void = function (__dict_Functor_8) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_8)($$const(unit))(fa);
        };
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var ap = function (__dict_Monad_14) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_14)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        "$": $dollar, 
        "+": $plus, 
        "++": $plus$plus, 
        "-": $minus, 
        "/=": $div$eq, 
        ":": $colon, 
        "<$>": $less$dollar$greater, 
        "<*>": $less$times$greater, 
        "<<<": $less$less$less, 
        "<>": $less$greater, 
        "==": $eq$eq, 
        ">>=": $greater$greater$eq, 
        Applicative: Applicative, 
        Apply: Apply, 
        Bind: Bind, 
        BoolLike: BoolLike, 
        Category: Category, 
        EQ: EQ, 
        Eq: Eq, 
        Functor: Functor, 
        GT: GT, 
        LT: LT, 
        Monad: Monad, 
        Num: Num, 
        Ord: Ord, 
        Semigroup: Semigroup, 
        Semigroupoid: Semigroupoid, 
        Show: Show, 
        Unit: Unit, 
        ap: ap, 
        boolLikeBoolean: boolLikeBoolean, 
        categoryArr: categoryArr, 
        compare: compare, 
        cons: cons, 
        "const": $$const, 
        eqNumber: eqNumber, 
        eqString: eqString, 
        id: id, 
        liftA1: liftA1, 
        numNumber: numNumber, 
        ordNumber: ordNumber, 
        pure: pure, 
        refEq: refEq, 
        refIneq: refIneq, 
        "return": $$return, 
        semigroupString: semigroupString, 
        semigroupoidArr: semigroupoidArr, 
        show: show, 
        showNumber: showNumber, 
        unit: unit, 
        "void": $$void, 
        "||": $bar$bar
    };
})();
var PS = PS || {};
PS.Kanren_Var = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Var = {
        create: function (value) {
            return value;
        }
    };
    var zero = 0;
    var runVar = function (_103) {
        return _103;
    };
    var eqVar = new Prelude.Eq(function (_107) {
        return function (_108) {
            return _107 !== _108;
        };
    }, function (_105) {
        return function (_106) {
            return _105 === _106;
        };
    });
    var ordVar = new Prelude.Ord(function () {
        return eqVar;
    }, function (_109) {
        return function (_110) {
            return Prelude.compare(Prelude.ordNumber)(_109)(_110);
        };
    });
    return {
        Var: Var, 
        eqVar: eqVar, 
        ordVar: ordVar, 
        runVar: runVar, 
        zero: zero
    };
})();
var PS = PS || {};
PS.Kanren_Obj = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Obj = {
        create: function (value) {
            return value;
        }
    };
    var eqObj = new Prelude.Eq(function (_114) {
        return function (_115) {
            return _114 !== _115;
        };
    }, function (_112) {
        return function (_113) {
            return _112 === _113;
        };
    });
    return {
        Obj: Obj, 
        eqObj: eqObj
    };
})();
var PS = PS || {};
PS.Kanren_Term = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Obj = PS.Kanren_Obj;
    function TmVar(value0) {
        this.value0 = value0;
    };
    TmVar.create = function (value0) {
        return new TmVar(value0);
    };
    function TmObj(value0) {
        this.value0 = value0;
    };
    TmObj.create = function (value0) {
        return new TmObj(value0);
    };
    function TmPair(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TmPair.create = function (value0) {
        return function (value1) {
            return new TmPair(value0, value1);
        };
    };
    var obj = function (nm) {
        return new TmObj(nm);
    };
    return {
        TmObj: TmObj, 
        TmPair: TmPair, 
        TmVar: TmVar, 
        obj: obj
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        on: on
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        applicativeEff: applicativeEff, 
        applyEff: applyEff, 
        bindE: bindE, 
        bindEff: bindEff, 
        functorEff: functorEff, 
        monadEff: monadEff, 
        returnE: returnE
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $times$greater = function (__dict_Apply_42) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_42)(Prelude["<$>"](__dict_Apply_42["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    return {
        "*>": $times$greater
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var maybe = function (_160) {
        return function (_161) {
            return function (_162) {
                if (_162 instanceof Nothing) {
                    return _160;
                };
                if (_162 instanceof Just) {
                    return _161(_162.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    return {
        Just: Just, 
        Nothing: Nothing, 
        fromMaybe: fromMaybe, 
        maybe: maybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function length (xs) {  return xs.length;};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _457 = comp(x)(y);
                    if (_457 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_457 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_457 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var functorArray = new Prelude.Functor(map);
    return {
        "..": $dot$dot, 
        append: append, 
        functorArray: functorArray, 
        length: length, 
        map: map, 
        range: range, 
        semigroupArray: semigroupArray, 
        sortBy: sortBy, 
        zipWith: zipWith
    };
})();
var PS = PS || {};
PS.Control_Monad_JQuery = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function select(selector) {
    return function () {
      return jQuery(selector);
    };
  }
  ;
    
  function create(html) {
    return function () {
      return jQuery(html);
    };
  }
  ;
    
  function addClass(cls) {
    return function(ob) {
      return function () {
        return ob.addClass(cls);
      };
    };
  }
  ;
    
  function append(ob1) {
    return function(ob) {
      return function () {
        return ob.append(ob1);
      };
    };
  }
  ;
    
  function remove(ob) {
    return function () {
      return ob.remove();
    };
  }
  ;
    
  function appendText(s) {
    return function(ob) {
      return function () {
        return ob.append(s);
      };
    };
  }
  ;
    
  function on(evt) {
    return function(act) {
      return function(ob) {
        return function() {
          return ob.on(evt, function(e) {
            act(e)(jQuery(this))();
          });
        };
      };
    };
  }
  ;
    
  function preventDefault(e) {
    return function() {
      e.preventDefault();
    };
  }
  ;
    return {
        addClass: addClass, 
        append: append, 
        appendText: appendText, 
        create: create, 
        on: on, 
        preventDefault: preventDefault, 
        remove: remove, 
        select: select
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidArray: monoidArray, 
        monoidString: monoidString
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var fst = function (_271) {
        return _271.value0;
    };
    return {
        Tuple: Tuple, 
        fst: fst, 
        zip: zip
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var semigroupFirst = new Prelude.Semigroup(function (_333) {
        return function (_334) {
            if (_333 instanceof Data_Maybe.Just) {
                return _333;
            };
            return _334;
        };
    });
    var runFirst = function (_325) {
        return _325;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    return {
        First: First, 
        monoidFirst: monoidFirst, 
        runFirst: runFirst, 
        semigroupFirst: semigroupFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    function foldrArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = xs.length - 1; i >= 0; --i) {        acc = f(xs[i])(acc);      }      return acc;    }  }};
    function foldlArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = 0, len = xs.length; i < len; ++i) {        acc = f(acc)(xs[i]);      }      return acc;    }  }};
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_311) {
        return function (__dict_Monoid_312) {
            return function (sep) {
                return function (xs) {
                    var go = function (_368) {
                        return function (_369) {
                            if (_368.init) {
                                return {
                                    init: false, 
                                    acc: _369
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_312["__superclass_Prelude.Semigroup_0"]())(_368.acc)(Prelude["<>"](__dict_Monoid_312["__superclass_Prelude.Semigroup_0"]())(sep)(_369))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_311)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_312)
                    })(xs)).acc;
                };
            };
        };
    };
    var or = function (__dict_Foldable_315) {
        return foldl(__dict_Foldable_315)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var foldableArray = new Foldable(function (__dict_Monoid_322) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_322["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_322))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_323) {
        return function (__dict_Foldable_324) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_324)(Data_Monoid_First.monoidFirst)(function (_335) {
                        return Prelude["=="](__dict_Eq_323)(a)(_335.value0) ? new Data_Maybe.Just(_335.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var any = function (__dict_Foldable_328) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_328)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_329) {
        return function (__dict_Foldable_330) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_330))(Prelude["=="](__dict_Eq_329));
        };
    };
    return {
        Foldable: Foldable, 
        any: any, 
        elem: elem, 
        foldMap: foldMap, 
        foldableArray: foldableArray, 
        foldl: foldl, 
        foldlArray: foldlArray, 
        foldr: foldr, 
        foldrArray: foldrArray, 
        intercalate: intercalate, 
        lookup: lookup, 
        or: or
    };
})();
var PS = PS || {};
PS.Kanren_Goal = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Done() {

    };
    Done.value = new Done();
    function Fail() {

    };
    Fail.value = new Fail();
    function Unify(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Unify.create = function (value0) {
        return function (value1) {
            return new Unify(value0, value1);
        };
    };
    function Fresh(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Fresh.create = function (value0) {
        return function (value1) {
            return new Fresh(value0, value1);
        };
    };
    function Disj(value0) {
        this.value0 = value0;
    };
    Disj.create = function (value0) {
        return new Disj(value0);
    };
    function Conj(value0) {
        this.value0 = value0;
    };
    Conj.create = function (value0) {
        return new Conj(value0);
    };
    function Named(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Named.create = function (value0) {
        return function (value1) {
            return new Named(value0, value1);
        };
    };
    return {
        Conj: Conj, 
        Disj: Disj, 
        Done: Done, 
        Fail: Fail, 
        Fresh: Fresh, 
        Named: Named, 
        Unify: Unify
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_347) {
        return function (_383) {
            if (_383.length === 0) {
                return Prelude.pure(__dict_Applicative_347)([  ]);
            };
            if (_383.length >= 1) {
                var _474 = _383.slice(1);
                return Prelude["<*>"](__dict_Applicative_347["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_347["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_383[0]))(sequence(traversableArray)(__dict_Applicative_347)(_474));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_346) {
        return function (_381) {
            return function (_382) {
                if (_382.length === 0) {
                    return Prelude.pure(__dict_Applicative_346)([  ]);
                };
                if (_382.length >= 1) {
                    var _478 = _382.slice(1);
                    return Prelude["<*>"](__dict_Applicative_346["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_346["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_381(_382[0])))(traverse(traversableArray)(__dict_Applicative_346)(_381)(_478));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var $$for = function (__dict_Applicative_349) {
        return function (__dict_Traversable_350) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_350)(__dict_Applicative_349)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        sequence: sequence, 
        traversableArray: traversableArray, 
        traverse: traverse
    };
})();
var PS = PS || {};
PS.Kanren_Subst = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    var Kanren_Var = PS.Kanren_Var;
    var Data_Tuple = PS.Data_Tuple;
    var walk = function (_396) {
        return function (_397) {
            if (_397 instanceof Kanren_Term.TmVar) {
                return Data_Maybe.fromMaybe(new Kanren_Term.TmVar(_397.value0))(Data_Foldable.lookup(Kanren_Var.eqVar)(Data_Foldable.foldableArray)(_397.value0)(_396));
            };
            return _397;
        };
    };
    var ext = function (v) {
        return function (t) {
            return function (s) {
                return Prelude[":"](new Data_Tuple.Tuple(v, t))(s);
            };
        };
    };
    return {
        ext: ext, 
        walk: walk
    };
})();
var PS = PS || {};
PS.Kanren_State = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function State(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    State.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new State(value0, value1, value2, value3);
                };
            };
        };
    };
    return {
        State: State
    };
})();
var PS = PS || {};
PS.Kanren_Unify = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Var = PS.Kanren_Var;
    var Data_Maybe = PS.Data_Maybe;
    var Kanren_Subst = PS.Kanren_Subst;
    var Kanren_Obj = PS.Kanren_Obj;
    var unify = function (u) {
        return function (v) {
            return function (s) {
                var go = function (_403) {
                    return function (_404) {
                        if (_403 instanceof Kanren_Term.TmVar && (_404 instanceof Kanren_Term.TmVar && Prelude["=="](Kanren_Var.eqVar)(_403.value0)(_404.value0))) {
                            return new Data_Maybe.Just(s);
                        };
                        if (_403 instanceof Kanren_Term.TmVar) {
                            return Data_Maybe.Just.create(Kanren_Subst.ext(_403.value0)(_404)(s));
                        };
                        if (_404 instanceof Kanren_Term.TmVar) {
                            return Data_Maybe.Just.create(Kanren_Subst.ext(_404.value0)(_403)(s));
                        };
                        if (_403 instanceof Kanren_Term.TmObj && (_404 instanceof Kanren_Term.TmObj && Prelude["=="](Kanren_Obj.eqObj)(_403.value0)(_404.value0))) {
                            return new Data_Maybe.Just(s);
                        };
                        if (_403 instanceof Kanren_Term.TmPair && _404 instanceof Kanren_Term.TmPair) {
                            var _490 = unify(_403.value0)(_404.value0)(s);
                            if (_490 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.Nothing.value;
                            };
                            if (_490 instanceof Data_Maybe.Just) {
                                return unify(_403.value1)(_404.value1)(_490.value0);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Data_Maybe.Nothing.value;
                    };
                };
                return go(Kanren_Subst.walk(s)(u))(Kanren_Subst.walk(s)(v));
            };
        };
    };
    return {
        unify: unify
    };
})();
var PS = PS || {};
PS.Kanren_Eval = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Obj = PS.Kanren_Obj;
    var Kanren_Goal = PS.Kanren_Goal;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Kanren_State = PS.Kanren_State;
    var Kanren_Var = PS.Kanren_Var;
    var replace = function (nm) {
        return function (r) {
            var onTerms = function (_409) {
                if (_409 instanceof Kanren_Term.TmObj && nm === _409.value0) {
                    return r;
                };
                if (_409 instanceof Kanren_Term.TmPair) {
                    return new Kanren_Term.TmPair(onTerms(_409.value0), onTerms(_409.value1));
                };
                return _409;
            };
            var onGoals = function (_408) {
                if (_408 instanceof Kanren_Goal.Done) {
                    return Kanren_Goal.Done.value;
                };
                if (_408 instanceof Kanren_Goal.Unify) {
                    return new Kanren_Goal.Unify(onTerms(_408.value0), onTerms(_408.value1));
                };
                if (_408 instanceof Kanren_Goal.Fresh) {
                    return Data_Foldable.elem(Prelude.eqString)(Data_Foldable.foldableArray)(nm)(_408.value0) ? _408 : new Kanren_Goal.Fresh(_408.value0, onGoals(_408.value1));
                };
                if (_408 instanceof Kanren_Goal.Disj) {
                    return new Kanren_Goal.Disj(Prelude["<$>"](Data_Array.functorArray)(onGoals)(_408.value0));
                };
                if (_408 instanceof Kanren_Goal.Conj) {
                    return new Kanren_Goal.Conj(Prelude["<$>"](Data_Array.functorArray)(onGoals)(_408.value0));
                };
                if (_408 instanceof Kanren_Goal.Named) {
                    return new Kanren_Goal.Named(_408.value0, Prelude["<$>"](Data_Array.functorArray)(onTerms)(_408.value1));
                };
                throw new Error("Failed pattern match");
            };
            return onGoals;
        };
    };
    var replaceAll = Data_Foldable.foldl(Data_Foldable.foldableArray)(function (f) {
        return function (_405) {
            return function (g) {
                return replace(_405.value0)(_405.value1)(f(g));
            };
        };
    })(Prelude.id(Prelude.categoryArr));
    var example = (function () {
        var goal = Kanren_Goal.Fresh.create([ "xs", "ys" ])(new Kanren_Goal.Named("appendo", [ Kanren_Term.obj("xs"), Kanren_Term.obj("ys"), new Kanren_Term.TmPair(Kanren_Term.obj("a"), new Kanren_Term.TmPair(Kanren_Term.obj("b"), new Kanren_Term.TmPair(Kanren_Term.obj("c"), Kanren_Term.obj("nil")))) ]));
        return new Kanren_State.State(goal, [  ], Kanren_Var.zero, [  ]);
    })();
    var builtIn = function (_406) {
        return function (_407) {
            if (_406 === "appendo" && _407.length === 3) {
                return new Kanren_Goal.Disj([ new Kanren_Goal.Conj([ new Kanren_Goal.Unify(_407[0], Kanren_Term.obj("nil")), new Kanren_Goal.Unify(_407[1], _407[2]) ]), Kanren_Goal.Fresh.create([ "x", "xs'", "res" ])(new Kanren_Goal.Conj([ new Kanren_Goal.Unify(_407[0], new Kanren_Term.TmPair(Kanren_Term.obj("x"), Kanren_Term.obj("xs'"))), new Kanren_Goal.Named("appendo", [ Kanren_Term.obj("xs'"), _407[1], Kanren_Term.obj("res") ]), new Kanren_Goal.Unify(_407[2], new Kanren_Term.TmPair(Kanren_Term.obj("x"), Kanren_Term.obj("res"))) ])) ]);
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        builtIn: builtIn, 
        example: example, 
        replace: replace, 
        replaceAll: replaceAll
    };
})();
var PS = PS || {};
PS.Kanren_Render = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_State = PS.Kanren_State;
    var Kanren_Goal = PS.Kanren_Goal;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Var = PS.Kanren_Var;
    var Kanren_Obj = PS.Kanren_Obj;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_JQuery = PS.Control_Monad_JQuery;
    var Control_Apply = PS.Control_Apply;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Array = PS.Data_Array;
    var Kanren_Eval = PS.Kanren_Eval;
    var Kanren_Unify = PS.Kanren_Unify;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Function = PS.Data_Function;
    var render = function (_412) {
        var unwind = function (_417) {
            if (_417.value0 instanceof Kanren_Goal.Done && _417.value3.length >= 1) {
                var _524 = _417.value3.slice(1);
                return new Kanren_State.State(_417.value3[0], _417.value1, _417.value2, _524);
            };
            return _417;
        };
        var spaces = (function () {
            var go = function (__copy__421) {
                return function (__copy__422) {
                    var _421 = __copy__421;
                    var _422 = __copy__422;
                    tco: while (true) {
                        if (_422 === 0) {
                            return _421;
                        };
                        var __tco__421 = _421 + "  ";
                        var __tco__422 = _422 - 1;
                        _421 = __tco__421;
                        _422 = __tco__422;
                        continue tco;
                    };
                };
            };
            return go("");
        })();
        var renderTerm = function (_420) {
            if (_420 instanceof Kanren_Term.TmVar) {
                return "#" + Prelude.show(Prelude.showNumber)(_420.value0);
            };
            if (_420 instanceof Kanren_Term.TmObj) {
                return _420.value0;
            };
            if (_420 instanceof Kanren_Term.TmPair) {
                return "(" + (renderTerm(_420.value0) + (" " + (renderTerm(_420.value1) + ")")));
            };
            throw new Error("Failed pattern match");
        };
        var renderShortGoal = function (_413) {
            if (_413 instanceof Kanren_Goal.Done) {
                return "Done";
            };
            if (_413 instanceof Kanren_Goal.Fresh) {
                return "fresh " + Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(_413.value0);
            };
            if (_413 instanceof Kanren_Goal.Unify) {
                return renderTerm(_413.value0) + (" == " + renderTerm(_413.value1));
            };
            if (_413 instanceof Kanren_Goal.Disj) {
                return "disj";
            };
            if (_413 instanceof Kanren_Goal.Conj) {
                return "conj";
            };
            if (_413 instanceof Kanren_Goal.Named) {
                return _413.value0;
            };
            throw new Error("Failed pattern match");
        };
        var newLine = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("line"));
        var linkTo = function (_418) {
            return function (_419) {
                if (_418) {
                    return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<a href='#'>"))(Control_Monad_JQuery.on("click")(function (e) {
                        return function (_) {
                            return Control_Apply["*>"](Control_Monad_Eff.applyEff)(_419)(Control_Monad_JQuery.preventDefault(e));
                        };
                    }));
                };
                if (!_418) {
                    return Control_Monad_JQuery.create("<span>");
                };
                throw new Error("Failed pattern match");
            };
        };
        var indented = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("indented"));
        var inContext = (function () {
            var go = function (__copy__423) {
                return function (__copy__424) {
                    return function (__copy__425) {
                        var _423 = __copy__423;
                        var _424 = __copy__424;
                        var _425 = __copy__425;
                        tco: while (true) {
                            if (_425.length === 0) {
                                return _423;
                            };
                            if (_425.length >= 1) {
                                var _547 = _425.slice(1);
                                var __tco__423 = Prelude[":"](new Data_Tuple.Tuple(_425[0], Prelude["++"](Data_Array.semigroupArray)(_424)(_547)))(_423);
                                var __tco__424 = Prelude["++"](Data_Array.semigroupArray)(_424)([ _425[0] ]);
                                _423 = __tco__423;
                                _424 = __tco__424;
                                _425 = _547;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
            return go([  ])([  ]);
        })();
        var renderGoal = function (_414) {
            return function (_415) {
                return function (_416) {
                    if (_416 instanceof Kanren_Goal.Done) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(Control_Monad_JQuery.appendText("Evaluation complete")(_415));
                    };
                    if (_416 instanceof Kanren_Goal.Fail) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(Control_Monad_JQuery.appendText("Contradiction!")(_415));
                    };
                    if (_416 instanceof Kanren_Goal.Fresh) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                            var nextVar = Kanren_Var.runVar(_412.value2) + Data_Array.length(_416.value0);
                            var freshNames = Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(Kanren_Term.TmVar.create)(Kanren_Var.Var.create))(Data_Array[".."](Kanren_Var.runVar(_412.value2))(Kanren_Var.runVar(_412.value2) + Data_Array.length(_416.value0) - 1));
                            var newState = new Kanren_State.State(Kanren_Eval.replaceAll(Data_Tuple.zip(_416.value0)(freshNames))(_416.value1), _412.value1, nextVar, _412.value3);
                            return function __do() {
                                var _28 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_414)(render(newState)))(Control_Monad_JQuery.appendText("(fresh " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(_416.value0) + "")))();
                                var _27 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_28))();
                                Control_Monad_JQuery.append(_27)(_415)();
                                var _26 = indented();
                                renderGoal(false)(_26)(_416.value1)();
                                Control_Monad_JQuery.append(_26)(_415)();
                                var _25 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText(")"))();
                                return Control_Monad_JQuery.append(_25)(_415)();
                            };
                        })());
                    };
                    if (_416 instanceof Kanren_Goal.Unify) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                            var text = "(= " + (renderTerm(_416.value0) + (" " + (renderTerm(_416.value1) + ")")));
                            var action = (function () {
                                var _557 = Kanren_Unify.unify(_416.value0)(_416.value1)(_412.value1);
                                if (_557 instanceof Data_Maybe.Nothing) {
                                    return render(new Kanren_State.State(Kanren_Goal.Fail.value, _412.value1, _412.value2, _412.value3));
                                };
                                if (_557 instanceof Data_Maybe.Just) {
                                    return render(unwind(new Kanren_State.State(Kanren_Goal.Done.value, _557.value0, _412.value2, _412.value3)));
                                };
                                throw new Error("Failed pattern match");
                            })();
                            return function __do() {
                                var _30 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_414)(action))(Control_Monad_JQuery.appendText(text))();
                                var _29 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_30))();
                                return Control_Monad_JQuery.append(_29)(_415)();
                            };
                        })());
                    };
                    if (_416 instanceof Kanren_Goal.Named) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                            var text = "(" + (_416.value0 + (" " + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Prelude["<$>"](Data_Array.functorArray)(renderTerm)(_416.value1)) + ")")));
                            var newState = new Kanren_State.State(Kanren_Eval.builtIn(_416.value0)(_416.value1), _412.value1, _412.value2, _412.value3);
                            return function __do() {
                                var _32 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_414)(render(newState)))(Control_Monad_JQuery.appendText(text))();
                                var _31 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_32))();
                                return Control_Monad_JQuery.append(_31)(_415)();
                            };
                        })());
                    };
                    if (_416 instanceof Kanren_Goal.Disj) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                            var _36 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText("(disj"))();
                            Control_Monad_JQuery.append(_36)(_415)();
                            Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(_416.value0)(function (g_2) {
                                return function __do() {
                                    var _34 = indented();
                                    var _33 = linkTo(_414)(render(unwind(new Kanren_State.State(g_2, _412.value1, _412.value2, _412.value3))))();
                                    renderGoal(false)(_33)(g_2)();
                                    Control_Monad_JQuery.append(_33)(_34)();
                                    return Control_Monad_JQuery.append(_34)(_415)();
                                };
                            })();
                            var _35 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText(")"))();
                            return Control_Monad_JQuery.append(_35)(_415)();
                        });
                    };
                    if (_416 instanceof Kanren_Goal.Conj) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                            var _40 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText("(conj"))();
                            Control_Monad_JQuery.append(_40)(_415)();
                            Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(inContext(_416.value0))(function (_410) {
                                return function __do() {
                                    var _38 = indented();
                                    var _37 = linkTo(_414)(render(unwind(new Kanren_State.State(_410.value0, _412.value1, _412.value2, Prelude["++"](Data_Array.semigroupArray)(_410.value1)(_412.value3)))))();
                                    renderGoal(false)(_37)(_410.value0)();
                                    Control_Monad_JQuery.append(_37)(_38)();
                                    return Control_Monad_JQuery.append(_38)(_415)();
                                };
                            })();
                            var _39 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText(")"))();
                            return Control_Monad_JQuery.append(_39)(_415)();
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#goal .with-margin .lines"))(Control_Monad_JQuery.remove)();
            var _47 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("lines"))();
            renderGoal(true)(_47)(_412.value0)();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#goal .with-margin"))(Control_Monad_JQuery.append(_47))();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#stack ul"))(Control_Monad_JQuery.remove)();
            var _46 = Control_Monad_JQuery.create("<ul>")();
            Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(_412.value3)(function (g$prime) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var _42 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<pre>"))(Control_Monad_JQuery.appendText(renderShortGoal(g$prime)))();
                    var _41 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<li>"))(Control_Monad_JQuery.append(_42))();
                    return Control_Monad_JQuery.append(_41)(_46)();
                });
            })();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#stack .with-margin"))(Control_Monad_JQuery.append(_46))();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#subst ul"))(Control_Monad_JQuery.remove)();
            var _45 = Control_Monad_JQuery.create("<ul>")();
            Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(Data_Array.sortBy(Data_Function.on(Prelude.compare(Kanren_Var.ordVar))(Data_Tuple.fst))(_412.value1))(function (_411) {
                var text = "#" + (Prelude.show(Prelude.showNumber)(_411.value0) + (" = " + renderTerm(_411.value1)));
                return function __do() {
                    var _44 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<pre>"))(Control_Monad_JQuery.appendText(text))();
                    var _43 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<li>"))(Control_Monad_JQuery.append(_44))();
                    return Control_Monad_JQuery.append(_43)(_45)();
                };
            })();
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#subst .with-margin"))(Control_Monad_JQuery.append(_45))();
        });
    };
    return {
        render: render
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Render = PS.Kanren_Render;
    var Kanren_Eval = PS.Kanren_Eval;
    var main = Kanren_Render.render(Kanren_Eval.example);
    return {
        main: main
    };
})();
