// Generated by psc version 0.6.0.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showNumberImpl(n) {  return n.toString();};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_1) {
        return $less$greater(__dict_Semigroup_1);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var unit = {};
    var showNumber = new Show(showNumberImpl);
    var show = function (dict) {
        return dict.show;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupString = new Semigroup(concatString);
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_4) {
        return pure(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
    };
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var liftA1 = function (__dict_Applicative_6) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_6)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var eqString = new Eq(refIneq, refEq);
    var eqNumber = new Eq(refIneq, refEq);
    var $$const = function (_29) {
        return function (_30) {
            return _29;
        };
    };
    var $$void = function (__dict_Functor_8) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_8)($$const(unit))(fa);
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var ap = function (__dict_Monad_14) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_14)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        "$": $dollar, 
        "+": $plus, 
        "++": $plus$plus, 
        "-": $minus, 
        "/=": $div$eq, 
        ":": $colon, 
        "<$>": $less$dollar$greater, 
        "<*>": $less$times$greater, 
        "<>": $less$greater, 
        "==": $eq$eq, 
        ">>=": $greater$greater$eq, 
        Applicative: Applicative, 
        Apply: Apply, 
        Bind: Bind, 
        Category: Category, 
        Eq: Eq, 
        Functor: Functor, 
        Monad: Monad, 
        Num: Num, 
        Semigroup: Semigroup, 
        Semigroupoid: Semigroupoid, 
        Show: Show, 
        Unit: Unit, 
        ap: ap, 
        categoryArr: categoryArr, 
        cons: cons, 
        "const": $$const, 
        eqNumber: eqNumber, 
        eqString: eqString, 
        id: id, 
        liftA1: liftA1, 
        numNumber: numNumber, 
        pure: pure, 
        refEq: refEq, 
        refIneq: refIneq, 
        "return": $$return, 
        semigroupString: semigroupString, 
        semigroupoidArr: semigroupoidArr, 
        show: show, 
        showNumber: showNumber, 
        unit: unit, 
        "void": $$void
    };
})();
var PS = PS || {};
PS.Kanren_Var = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Var = {
        create: function (value) {
            return value;
        }
    };
    var zero = 0;
    var succ = function (_50) {
        return Var.create(_50 + 1);
    };
    var eqVar = new Prelude.Eq(function (_53) {
        return function (_54) {
            return _53 !== _54;
        };
    }, function (_51) {
        return function (_52) {
            return _51 === _52;
        };
    });
    return {
        Var: Var, 
        eqVar: eqVar, 
        succ: succ, 
        zero: zero
    };
})();
var PS = PS || {};
PS.Kanren_Obj = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Obj = {
        create: function (value) {
            return value;
        }
    };
    var eqObj = new Prelude.Eq(function (_58) {
        return function (_59) {
            return _58 !== _59;
        };
    }, function (_56) {
        return function (_57) {
            return _56 === _57;
        };
    });
    return {
        Obj: Obj, 
        eqObj: eqObj
    };
})();
var PS = PS || {};
PS.Kanren_Term = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function TmVar(value0) {
        this.value0 = value0;
    };
    TmVar.create = function (value0) {
        return new TmVar(value0);
    };
    function TmObj(value0) {
        this.value0 = value0;
    };
    TmObj.create = function (value0) {
        return new TmObj(value0);
    };
    function TmPair(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TmPair.create = function (value0) {
        return function (value1) {
            return new TmPair(value0, value1);
        };
    };
    return {
        TmObj: TmObj, 
        TmPair: TmPair, 
        TmVar: TmVar
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        applicativeEff: applicativeEff, 
        applyEff: applyEff, 
        bindE: bindE, 
        bindEff: bindEff, 
        functorEff: functorEff, 
        monadEff: monadEff, 
        returnE: returnE
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $times$greater = function (__dict_Apply_34) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_34)(Prelude["<$>"](__dict_Apply_34["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    return {
        "*>": $times$greater
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var maybe = function (_91) {
        return function (_92) {
            return function (_93) {
                if (_93 instanceof Nothing) {
                    return _91;
                };
                if (_93 instanceof Just) {
                    return _92(_93.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    return {
        Just: Just, 
        Nothing: Nothing, 
        fromMaybe: fromMaybe, 
        maybe: maybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    var functorArray = new Prelude.Functor(map);
    return {
        functorArray: functorArray, 
        map: map
    };
})();
var PS = PS || {};
PS.Control_Monad_JQuery = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function select(selector) {
    return function () {
      return jQuery(selector);
    };
  }
  ;
    
  function create(html) {
    return function () {
      return jQuery(html);
    };
  }
  ;
    
  function addClass(cls) {
    return function(ob) {
      return function () {
        return ob.addClass(cls);
      };
    };
  }
  ;
    
  function append(ob1) {
    return function(ob) {
      return function () {
        return ob.append(ob1);
      };
    };
  }
  ;
    
  function remove(ob) {
    return function () {
      return ob.remove();
    };
  }
  ;
    
  function appendText(s) {
    return function(ob) {
      return function () {
        return ob.append(s);
      };
    };
  }
  ;
    
  function on(evt) {
    return function(act) {
      return function(ob) {
        return function() {
          return ob.on(evt, function(e) {
            act(e)(jQuery(this))();
          });
        };
      };
    };
  }
  ;
    
  function preventDefault(e) {
    return function() {
      e.preventDefault();
    };
  }
  ;
    return {
        addClass: addClass, 
        append: append, 
        appendText: appendText, 
        create: create, 
        on: on, 
        preventDefault: preventDefault, 
        remove: remove, 
        select: select
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var mempty = function (dict) {
        return dict.mempty;
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidString: monoidString
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    return {
        Tuple: Tuple
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var semigroupFirst = new Prelude.Semigroup(function (_242) {
        return function (_243) {
            if (_242 instanceof Data_Maybe.Just) {
                return _242;
            };
            return _243;
        };
    });
    var runFirst = function (_234) {
        return _234;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    return {
        First: First, 
        monoidFirst: monoidFirst, 
        runFirst: runFirst, 
        semigroupFirst: semigroupFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    function foldrArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = xs.length - 1; i >= 0; --i) {        acc = f(xs[i])(acc);      }      return acc;    }  }};
    function foldlArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = 0, len = xs.length; i < len; ++i) {        acc = f(acc)(xs[i]);      }      return acc;    }  }};
    var foldr = function (dict) {
        return dict.foldr;
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_100) {
        return function (__dict_Monoid_101) {
            return function (sep) {
                return function (xs) {
                    var go = function (_277) {
                        return function (_278) {
                            if (_277.init) {
                                return {
                                    init: false, 
                                    acc: _278
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_101["__superclass_Prelude.Semigroup_0"]())(_277.acc)(Prelude["<>"](__dict_Monoid_101["__superclass_Prelude.Semigroup_0"]())(sep)(_278))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_100)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_101)
                    })(xs)).acc;
                };
            };
        };
    };
    var foldableArray = new Foldable(function (__dict_Monoid_111) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_111["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_111))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_112) {
        return function (__dict_Foldable_113) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_113)(Data_Monoid_First.monoidFirst)(function (_244) {
                        return Prelude["=="](__dict_Eq_112)(a)(_244.value0) ? new Data_Maybe.Just(_244.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    return {
        Foldable: Foldable, 
        foldMap: foldMap, 
        foldableArray: foldableArray, 
        foldl: foldl, 
        foldlArray: foldlArray, 
        foldr: foldr, 
        foldrArray: foldrArray, 
        intercalate: intercalate, 
        lookup: lookup
    };
})();
var PS = PS || {};
PS.Kanren_Goal = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Done() {

    };
    Done.value = new Done();
    function Fail() {

    };
    Fail.value = new Fail();
    function Unify(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Unify.create = function (value0) {
        return function (value1) {
            return new Unify(value0, value1);
        };
    };
    function Fresh(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Fresh.create = function (value0) {
        return function (value1) {
            return new Fresh(value0, value1);
        };
    };
    function Disj(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Disj.create = function (value0) {
        return function (value1) {
            return new Disj(value0, value1);
        };
    };
    function Conj(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Conj.create = function (value0) {
        return function (value1) {
            return new Conj(value0, value1);
        };
    };
    function Named(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Named.create = function (value0) {
        return function (value1) {
            return new Named(value0, value1);
        };
    };
    return {
        Conj: Conj, 
        Disj: Disj, 
        Done: Done, 
        Fail: Fail, 
        Fresh: Fresh, 
        Named: Named, 
        Unify: Unify
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Foldable = PS.Data_Foldable;
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_136) {
        return function (_292) {
            if (_292.length === 0) {
                return Prelude.pure(__dict_Applicative_136)([  ]);
            };
            if (_292.length >= 1) {
                var _361 = _292.slice(1);
                return Prelude["<*>"](__dict_Applicative_136["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_136["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_292[0]))(sequence(traversableArray)(__dict_Applicative_136)(_361));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_135) {
        return function (_290) {
            return function (_291) {
                if (_291.length === 0) {
                    return Prelude.pure(__dict_Applicative_135)([  ]);
                };
                if (_291.length >= 1) {
                    var _365 = _291.slice(1);
                    return Prelude["<*>"](__dict_Applicative_135["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_135["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_290(_291[0])))(traverse(traversableArray)(__dict_Applicative_135)(_290)(_365));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var $$for = function (__dict_Applicative_138) {
        return function (__dict_Traversable_139) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_139)(__dict_Applicative_138)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        sequence: sequence, 
        traversableArray: traversableArray, 
        traverse: traverse
    };
})();
var PS = PS || {};
PS.Kanren_Subst = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    var Kanren_Var = PS.Kanren_Var;
    var Data_Tuple = PS.Data_Tuple;
    var walk = function (_305) {
        return function (_306) {
            if (_306 instanceof Kanren_Term.TmVar) {
                return Data_Maybe.fromMaybe(new Kanren_Term.TmVar(_306.value0))(Data_Foldable.lookup(Kanren_Var.eqVar)(Data_Foldable.foldableArray)(_306.value0)(_305));
            };
            return _306;
        };
    };
    var ext = function (v) {
        return function (t) {
            return function (s) {
                return Prelude[":"](new Data_Tuple.Tuple(v, t))(s);
            };
        };
    };
    return {
        ext: ext, 
        walk: walk
    };
})();
var PS = PS || {};
PS.Kanren_State = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function State(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    State.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new State(value0, value1, value2, value3);
                };
            };
        };
    };
    return {
        State: State
    };
})();
var PS = PS || {};
PS.Kanren_Unify = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Var = PS.Kanren_Var;
    var Data_Maybe = PS.Data_Maybe;
    var Kanren_Subst = PS.Kanren_Subst;
    var Kanren_Obj = PS.Kanren_Obj;
    var unify = function (u) {
        return function (v) {
            return function (s) {
                var go = function (_313) {
                    return function (_314) {
                        if (_313 instanceof Kanren_Term.TmVar && (_314 instanceof Kanren_Term.TmVar && Prelude["=="](Kanren_Var.eqVar)(_313.value0)(_314.value0))) {
                            return new Data_Maybe.Just(s);
                        };
                        if (_313 instanceof Kanren_Term.TmVar) {
                            return Data_Maybe.Just.create(Kanren_Subst.ext(_313.value0)(_314)(s));
                        };
                        if (_314 instanceof Kanren_Term.TmVar) {
                            return Data_Maybe.Just.create(Kanren_Subst.ext(_314.value0)(_313)(s));
                        };
                        if (_313 instanceof Kanren_Term.TmObj && (_314 instanceof Kanren_Term.TmObj && Prelude["=="](Kanren_Obj.eqObj)(_313.value0)(_314.value0))) {
                            return new Data_Maybe.Just(s);
                        };
                        if (_313 instanceof Kanren_Term.TmPair && _314 instanceof Kanren_Term.TmPair) {
                            var _377 = unify(_313.value0)(_314.value0)(s);
                            if (_377 instanceof Data_Maybe.Nothing) {
                                return Data_Maybe.Nothing.value;
                            };
                            if (_377 instanceof Data_Maybe.Just) {
                                return unify(_313.value1)(_314.value1)(_377.value0);
                            };
                            throw new Error("Failed pattern match");
                        };
                        return Data_Maybe.Nothing.value;
                    };
                };
                return go(Kanren_Subst.walk(s)(u))(Kanren_Subst.walk(s)(v));
            };
        };
    };
    return {
        unify: unify
    };
})();
var PS = PS || {};
PS.Kanren_Eval = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Obj = PS.Kanren_Obj;
    var Kanren_Goal = PS.Kanren_Goal;
    var Data_Array = PS.Data_Array;
    var Kanren_State = PS.Kanren_State;
    var Kanren_Var = PS.Kanren_Var;
    var replace = function (nm) {
        return function (r) {
            var onTerms = function (_318) {
                if (_318 instanceof Kanren_Term.TmObj && nm === _318.value0) {
                    return r;
                };
                if (_318 instanceof Kanren_Term.TmPair) {
                    return new Kanren_Term.TmPair(onTerms(_318.value0), onTerms(_318.value1));
                };
                return _318;
            };
            var onGoals = function (_317) {
                if (_317 instanceof Kanren_Goal.Done) {
                    return Kanren_Goal.Done.value;
                };
                if (_317 instanceof Kanren_Goal.Unify) {
                    return new Kanren_Goal.Unify(onTerms(_317.value0), onTerms(_317.value1));
                };
                if (_317 instanceof Kanren_Goal.Fresh) {
                    return nm === _317.value0 ? _317 : new Kanren_Goal.Fresh(_317.value0, onGoals(_317.value1));
                };
                if (_317 instanceof Kanren_Goal.Disj) {
                    return new Kanren_Goal.Disj(onGoals(_317.value0), onGoals(_317.value1));
                };
                if (_317 instanceof Kanren_Goal.Conj) {
                    return new Kanren_Goal.Conj(onGoals(_317.value0), onGoals(_317.value1));
                };
                if (_317 instanceof Kanren_Goal.Named) {
                    return new Kanren_Goal.Named(_317.value0, Prelude["<$>"](Data_Array.functorArray)(onTerms)(_317.value1));
                };
                throw new Error("Failed pattern match");
            };
            return onGoals;
        };
    };
    var example = (function () {
        var obj = function (nm) {
            return new Kanren_Term.TmObj(nm);
        };
        var goal = Kanren_Goal.Fresh.create("xs")(Kanren_Goal.Fresh.create("ys")(new Kanren_Goal.Named("appendo", [ obj("xs"), obj("ys"), new Kanren_Term.TmPair(obj("a"), new Kanren_Term.TmPair(obj("b"), new Kanren_Term.TmPair(obj("c"), obj("nil")))) ])));
        return new Kanren_State.State(goal, [  ], Kanren_Var.zero, [  ]);
    })();
    var builtIn = function (_315) {
        return function (_316) {
            if (_315 === "appendo" && _316.length === 3) {
                var obj = function (nm) {
                    return new Kanren_Term.TmObj(nm);
                };
                return new Kanren_Goal.Disj(new Kanren_Goal.Conj(new Kanren_Goal.Unify(_316[0], obj("nil")), new Kanren_Goal.Unify(_316[1], _316[2])), Kanren_Goal.Fresh.create("x")(Kanren_Goal.Fresh.create("xs'")(Kanren_Goal.Fresh.create("res")(new Kanren_Goal.Conj(new Kanren_Goal.Unify(_316[0], new Kanren_Term.TmPair(obj("x"), obj("xs'"))), new Kanren_Goal.Conj(new Kanren_Goal.Named("appendo", [ obj("xs'"), _316[1], obj("res") ]), new Kanren_Goal.Unify(_316[2], new Kanren_Term.TmPair(obj("x"), obj("res")))))))));
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        builtIn: builtIn, 
        example: example, 
        replace: replace
    };
})();
var PS = PS || {};
PS.Kanren_Render = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_State = PS.Kanren_State;
    var Kanren_Goal = PS.Kanren_Goal;
    var Kanren_Term = PS.Kanren_Term;
    var Kanren_Var = PS.Kanren_Var;
    var Kanren_Obj = PS.Kanren_Obj;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_JQuery = PS.Control_Monad_JQuery;
    var Control_Apply = PS.Control_Apply;
    var Kanren_Eval = PS.Kanren_Eval;
    var Kanren_Unify = PS.Kanren_Unify;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Array = PS.Data_Array;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Tuple = PS.Data_Tuple;
    var render = function (_320) {
        var unwind = function (_325) {
            if (_325.value0 instanceof Kanren_Goal.Done && _325.value3.length >= 1) {
                var _410 = _325.value3.slice(1);
                return new Kanren_State.State(_325.value3[0], _325.value1, _325.value2, _410);
            };
            return _325;
        };
        var spaces = (function () {
            var go = function (__copy__329) {
                return function (__copy__330) {
                    var _329 = __copy__329;
                    var _330 = __copy__330;
                    tco: while (true) {
                        if (_330 === 0) {
                            return _329;
                        };
                        var __tco__329 = _329 + "  ";
                        var __tco__330 = _330 - 1;
                        _329 = __tco__329;
                        _330 = __tco__330;
                        continue tco;
                    };
                };
            };
            return go("");
        })();
        var renderTerm = function (_328) {
            if (_328 instanceof Kanren_Term.TmVar) {
                return "#" + Prelude.show(Prelude.showNumber)(_328.value0);
            };
            if (_328 instanceof Kanren_Term.TmObj) {
                return _328.value0;
            };
            if (_328 instanceof Kanren_Term.TmPair) {
                return "(" + (renderTerm(_328.value0) + (", " + (renderTerm(_328.value1) + ")")));
            };
            throw new Error("Failed pattern match");
        };
        var renderShortGoal = function (_321) {
            if (_321 instanceof Kanren_Goal.Done) {
                return "Done";
            };
            if (_321 instanceof Kanren_Goal.Fresh) {
                return "fresh " + _321.value0;
            };
            if (_321 instanceof Kanren_Goal.Unify) {
                return renderTerm(_321.value0) + (" == " + renderTerm(_321.value1));
            };
            if (_321 instanceof Kanren_Goal.Disj) {
                return "disj";
            };
            if (_321 instanceof Kanren_Goal.Conj) {
                return "conj";
            };
            if (_321 instanceof Kanren_Goal.Named) {
                return _321.value0;
            };
            throw new Error("Failed pattern match");
        };
        var newLine = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("line"));
        var linkTo = function (_326) {
            return function (_327) {
                if (_326) {
                    return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<a href='#'>"))(Control_Monad_JQuery.on("click")(function (e) {
                        return function (_) {
                            return Control_Apply["*>"](Control_Monad_Eff.applyEff)(_327)(Control_Monad_JQuery.preventDefault(e));
                        };
                    }));
                };
                if (!_326) {
                    return Control_Monad_JQuery.create("<span>");
                };
                throw new Error("Failed pattern match");
            };
        };
        var indented = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("indented"));
        var renderGoal = function (_322) {
            return function (_323) {
                return function (_324) {
                    if (_324 instanceof Kanren_Goal.Done) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(Control_Monad_JQuery.appendText("Evaluation complete")(_323));
                    };
                    if (_324 instanceof Kanren_Goal.Fail) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(Control_Monad_JQuery.appendText("Contradiction!")(_323));
                    };
                    if (_324 instanceof Kanren_Goal.Fresh) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                            var newState = new Kanren_State.State(Kanren_Eval.replace(_324.value0)(new Kanren_Term.TmVar(_320.value2))(_324.value1), _320.value1, Kanren_Var.succ(_320.value2), _320.value3);
                            return function __do() {
                                var _7 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_322)(render(newState)))(Control_Monad_JQuery.appendText("fresh " + _324.value0))();
                                var _6 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_7))();
                                Control_Monad_JQuery.append(_6)(_323)();
                                var _5 = indented();
                                renderGoal(false)(_5)(_324.value1)();
                                return Control_Monad_JQuery.append(_5)(_323)();
                            };
                        })());
                    };
                    if (_324 instanceof Kanren_Goal.Unify) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                            var text = renderTerm(_324.value0) + (" == " + renderTerm(_324.value1));
                            var action = (function () {
                                var _439 = Kanren_Unify.unify(_324.value0)(_324.value1)(_320.value1);
                                if (_439 instanceof Data_Maybe.Nothing) {
                                    return render(new Kanren_State.State(Kanren_Goal.Fail.value, _320.value1, _320.value2, _320.value3));
                                };
                                if (_439 instanceof Data_Maybe.Just) {
                                    return render(unwind(new Kanren_State.State(Kanren_Goal.Done.value, _439.value0, _320.value2, _320.value3)));
                                };
                                throw new Error("Failed pattern match");
                            })();
                            return function __do() {
                                var _9 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_322)(action))(Control_Monad_JQuery.appendText(text))();
                                var _8 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_9))();
                                return Control_Monad_JQuery.append(_8)(_323)();
                            };
                        })());
                    };
                    if (_324 instanceof Kanren_Goal.Named) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)((function () {
                            var text = _324.value0 + (" " + Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Prelude["<$>"](Data_Array.functorArray)(renderTerm)(_324.value1)));
                            var newState = new Kanren_State.State(Kanren_Eval.builtIn(_324.value0)(_324.value1), _320.value1, _320.value2, _320.value3);
                            return function __do() {
                                var _11 = Prelude[">>="](Control_Monad_Eff.bindEff)(linkTo(_322)(render(newState)))(Control_Monad_JQuery.appendText(text))();
                                var _10 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.append(_11))();
                                return Control_Monad_JQuery.append(_10)(_323)();
                            };
                        })());
                    };
                    if (_324 instanceof Kanren_Goal.Disj) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                            var _16 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText("disj"))();
                            Control_Monad_JQuery.append(_16)(_323)();
                            var _15 = indented();
                            var _14 = linkTo(_322)(render(unwind(new Kanren_State.State(_324.value0, _320.value1, _320.value2, _320.value3))))();
                            renderGoal(false)(_14)(_324.value0)();
                            Control_Monad_JQuery.append(_14)(_15)();
                            Control_Monad_JQuery.append(_15)(_323)();
                            var _13 = indented();
                            var _12 = linkTo(_322)(render(unwind(new Kanren_State.State(_324.value1, _320.value1, _320.value2, _320.value3))))();
                            renderGoal(false)(_12)(_324.value1)();
                            Control_Monad_JQuery.append(_12)(_13)();
                            return Control_Monad_JQuery.append(_13)(_323)();
                        });
                    };
                    if (_324 instanceof Kanren_Goal.Conj) {
                        return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                            var _21 = Prelude[">>="](Control_Monad_Eff.bindEff)(newLine)(Control_Monad_JQuery.appendText("conj"))();
                            Control_Monad_JQuery.append(_21)(_323)();
                            var _20 = indented();
                            var _19 = linkTo(_322)(render(unwind(new Kanren_State.State(_324.value0, _320.value1, _320.value2, Prelude[":"](_324.value1)(_320.value3)))))();
                            renderGoal(false)(_19)(_324.value0)();
                            Control_Monad_JQuery.append(_19)(_20)();
                            Control_Monad_JQuery.append(_20)(_323)();
                            var _18 = indented();
                            var _17 = linkTo(_322)(render(unwind(new Kanren_State.State(_324.value1, _320.value1, _320.value2, Prelude[":"](_324.value0)(_320.value3)))))();
                            renderGoal(false)(_17)(_324.value1)();
                            Control_Monad_JQuery.append(_17)(_18)();
                            return Control_Monad_JQuery.append(_18)(_323)();
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#goal .lines"))(Control_Monad_JQuery.remove)();
            var _28 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<div>"))(Control_Monad_JQuery.addClass("lines"))();
            renderGoal(true)(_28)(_320.value0)();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#goal .with-margin"))(Control_Monad_JQuery.append(_28))();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#stack ul"))(Control_Monad_JQuery.remove)();
            var _27 = Control_Monad_JQuery.create("<ul>")();
            Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(_320.value3)(function (g$prime) {
                return Prelude["void"](Control_Monad_Eff.functorEff)(function __do() {
                    var _23 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<pre>"))(Control_Monad_JQuery.appendText(renderShortGoal(g$prime)))();
                    var _22 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<li>"))(Control_Monad_JQuery.append(_23))();
                    return Control_Monad_JQuery.append(_22)(_27)();
                });
            })();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#stack .with-margin"))(Control_Monad_JQuery.append(_27))();
            Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#subst ul"))(Control_Monad_JQuery.remove)();
            var _26 = Control_Monad_JQuery.create("<ul>")();
            Data_Traversable["for"](Control_Monad_Eff.applicativeEff)(Data_Traversable.traversableArray)(_320.value1)(function (_319) {
                var text = "#" + (Prelude.show(Prelude.showNumber)(_319.value0) + (" = " + renderTerm(_319.value1)));
                return function __do() {
                    var _25 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<pre>"))(Control_Monad_JQuery.appendText(text))();
                    var _24 = Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.create("<li>"))(Control_Monad_JQuery.append(_25))();
                    return Control_Monad_JQuery.append(_24)(_26)();
                };
            })();
            return Prelude[">>="](Control_Monad_Eff.bindEff)(Control_Monad_JQuery.select("#subst .with-margin"))(Control_Monad_JQuery.append(_26))();
        });
    };
    return {
        render: render
    };
})();
var PS = PS || {};
PS.Main = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Kanren_Render = PS.Kanren_Render;
    var Kanren_Eval = PS.Kanren_Eval;
    var main = Kanren_Render.render(Kanren_Eval.example);
    return {
        main: main
    };
})();
